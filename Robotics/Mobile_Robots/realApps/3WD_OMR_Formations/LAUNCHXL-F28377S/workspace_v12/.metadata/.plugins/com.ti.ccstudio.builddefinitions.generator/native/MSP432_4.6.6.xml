<?xml version="1.0" ?>
<TOOLSET>
<OPTIONXML version='4' config='target=arm' />
<TOOL>
    <TAG>COMPILER</TAG>
    <TOOLNAME>C/C++ COMPILER</TOOLNAME>
    <DEFINITIONS>
        <OPTION tag='ABI'>
            <TYPE>simple</TYPE>
            <NAME>--abi</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>eabi,ti_arm9_abi,tiabi</DESCRIPTION>
                <ONEOF>eabi</ONEOF>
                <ONEOF>ti_arm9_abi</ONEOF>
                <ONEOF>tiabi</ONEOF>
                <DEFAULT>ti_arm9_abi</DEFAULT>
            </ARG>
            <TIP>Application binary interface (tiabi, ti_arm9_abi, eabi)</TIP>
            <HELP>Specify an application interface. Default is ti_arm9_abi.  To generate TIABI compliant code specify --abi=tiabi.  Use --abi=eabi to interlink with other EABI compliant ARM compilers.</HELP>
        </OPTION>
        
        <OPTION tag='ABS_DIRECTORY'>
            <TYPE>cmdline</TYPE>
            <NAME>--abs_directory</NAME>
            <ALIAS>-fb</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>dir</DESCRIPTION>
            </ARG>
            <TIP>Absolute listing directory (default is .obj dir)</TIP>
            <HELP>Absolute listing directory (default is .obj dir)</HELP>
        </OPTION>
        
        <OPTION tag='ABSOLUTE_LISTING'>
            <TYPE>cmdline</TYPE>
            <NAME>--absolute_listing</NAME>
            <ALIAS>-aa</ALIAS>
            <TIP>Generate absolute listing file</TIP>
            <HELP>Generate absolute listing file</HELP>
        </OPTION>
        
        <OPTION tag='ALIASED_VARIABLES'>
            <TYPE>simple</TYPE>
            <NAME>--aliased_variables</NAME>
            <ALIAS>-ma</ALIAS>
            <TIP>Assume called funcs create hidden aliases (rare)</TIP>
            <HELP>Assume called funcs create hidden aliases (rare)</HELP>
        </OPTION>
        
        <OPTION tag='ALIGN_STRUCTS'>
            <TYPE>simple</TYPE>
            <NAME>--align_structs</NAME>
            <ARG>
                <TYPE>NUMBER</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>bytecount</DESCRIPTION>
            </ARG>
            <TIP>Force alignment of structures to &lt;bytecount&gt; bytes</TIP>
            <HELP>Force alignment of structures to &lt;bytecount&gt; bytes</HELP>
        </OPTION>
        
        <OPTION tag='ANALYZE'>
            <TYPE>simple</TYPE>
            <NAME>--analyze</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>codecov,callgraph</DESCRIPTION>
                <ONEOF>codecov</ONEOF>
                <ONEOF>callgraph</ONEOF>
            </ARG>
            <TIP>Generate analysis info from profile data</TIP>
            <HELP>Generate analysis information about code coverage or call graph information in the form of CSV files.  This information can then be read and interpreted by other tools.  For example, the cache layout tool, clt6x, can be used to interpret the call graph information and produce a preferred function order that can be incorporated into the application link.  The compiler can only generate one kind of analysis information for a given invocation of the compiler.</HELP>
            <CONFLICT>GEN_PROFILE_INFO</CONFLICT>
        </OPTION>
        
        <OPTION tag='ANALYZE_ONLY'>
            <TYPE>simple</TYPE>
            <NAME>--analyze_only</NAME>
            <TIP>Only generate analysis</TIP>
            <HELP>Generate analysis only; do not continue compilation. This option is used in combination with the --analyze option to instruct the compiler to halt the compilation after it has completed the generation of analysis information requested in the --analyze option.</HELP>
            <CONFLICT>GEN_PROFILE_INFO</CONFLICT>
        </OPTION>
        
        <OPTION tag='ASM_DEFINE'>
            <TYPE>simple</TYPE>
            <NAME>--asm_define</NAME>
            <ALIAS>-ad</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>NAME[=value]</DESCRIPTION>
            </ARG>
            <TIP>Pre-define assembly symbol NAME</TIP>
            <HELP>Pre-define the assembly symbol NAME, optionally setting its contents to &apos;value&apos;.</HELP>
        </OPTION>
        
        <OPTION tag='ASM_DEPENDENCY'>
            <TYPE>simple</TYPE>
            <NAME>--asm_dependency</NAME>
            <ALIAS>-apd</ALIAS>
            <TIP>Generate assembly dependency information</TIP>
            <HELP>Generate assembly dependency information</HELP>
            <CONFLICT>EMBED_ICODE</CONFLICT>
        </OPTION>
        
        <OPTION tag='ASM_DIRECTORY'>
            <TYPE>simple</TYPE>
            <NAME>--asm_directory</NAME>
            <ALIAS>-fs</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>dir</DESCRIPTION>
            </ARG>
            <TIP>Assembly file directory (default is .)</TIP>
            <HELP>Assembly file directory (default is .)</HELP>
        </OPTION>
        
        <OPTION tag='ASM_EXTENSION'>
            <TYPE>simple</TYPE>
            <NAME>--asm_extension</NAME>
            <ALIAS>-ea</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>.ext</DESCRIPTION>
            </ARG>
            <TIP>Extension for assembly files (default is .asm)</TIP>
            <HELP>Extension for assembly files (default is .asm)</HELP>
        </OPTION>
        
        <OPTION tag='ASM_FILE'>
            <TYPE>simple</TYPE>
            <NAME>--asm_file</NAME>
            <ALIAS>-fa</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>File is an assembly file (default for .asm)</TIP>
            <HELP>File is an assembly file (default for .asm)</HELP>
        </OPTION>
        
        <OPTION tag='ASM_INCLUDES'>
            <TYPE>simple</TYPE>
            <NAME>--asm_includes</NAME>
            <ALIAS>-api</ALIAS>
            <TIP>Generate first-level assembly include file list</TIP>
            <HELP>Generate first-level assembly include file list</HELP>
        </OPTION>
        
        <OPTION tag='ASM_LISTING'>
            <TYPE>simple</TYPE>
            <NAME>--asm_listing</NAME>
            <ALIAS>-al</ALIAS>
            <TIP>Generate listing file</TIP>
            <HELP>Generate listing file</HELP>
        </OPTION>
        
        <OPTION tag='ASM_UNDEFINE'>
            <TYPE>simple</TYPE>
            <NAME>--asm_undefine</NAME>
            <ALIAS>-au</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>NAME</DESCRIPTION>
            </ARG>
            <TIP>Undefine assembly symbol NAME</TIP>
            <HELP>Undefine assembly symbol NAME</HELP>
        </OPTION>
        
        <OPTION tag='AUTO_INLINE'>
            <TYPE>simple</TYPE>
            <NAME>--auto_inline</NAME>
            <ALIAS>-oi</ALIAS>
            <ARG>
                <TYPE>NUMBER</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>size</DESCRIPTION>
            </ARG>
            <TIP>Specify threshold for automatic inlining</TIP>
            <HELP>Specify threshold for automatic inlining</HELP>
        </OPTION>
        
        <OPTION tag='C_EXTENSION'>
            <TYPE>simple</TYPE>
            <NAME>--c_extension</NAME>
            <ALIAS>-ec</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>.ext</DESCRIPTION>
            </ARG>
            <TIP>Extension for C files (default is .c)</TIP>
            <HELP>Extension for C files (default is .c)</HELP>
        </OPTION>
        
        <OPTION tag='C_FILE'>
            <TYPE>simple</TYPE>
            <NAME>--c_file</NAME>
            <ALIAS>-fc</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>File is a C file (default for .c/no ext)</TIP>
            <HELP>File is a C file (default for .c/no ext)</HELP>
        </OPTION>
        
        <OPTION tag='C_SRC_INTERLIST'>
            <TYPE>simple</TYPE>
            <NAME>--c_src_interlist</NAME>
            <ALIAS>-ss</ALIAS>
            <TIP>Generate C source interlisted assembly file</TIP>
            <HELP>Generate C source interlisted assembly file</HELP>
            <OVERRIDES>SRC_INTERLIST</OVERRIDES>
        </OPTION>
        
        <OPTION tag='CALL_ASSUMPTIONS'>
            <TYPE>simple</TYPE>
            <NAME>--call_assumptions</NAME>
            <ALIAS>-op</ALIAS>
            <ARG>
                <TYPE>RANGE</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>0-3</DESCRIPTION>
                <RANGE low='0' high='3'/>
            </ARG>
            <TIP>Specify call assumptions when optimizing</TIP>
            <HELP>Specify assumptions to make about function calls when optimizing.

Level 0 (-op0) indicates that the module has functions that are called from other modules.

Level 1 (-op1) indicates that the module does not have functions that are called by other modules but has global variables that are modified in other modules.

Level 2 (-op2) indicates that the module does not have functions that are called or globals that are modified by other modules.

Level 3 (-op3) indicates that the module has functions that are called by other modules but does not have globals that are modified by other modules.</HELP>
        </OPTION>
        
        <OPTION tag='CMD_FILE'>
            <TYPE>simple</TYPE>
            <NAME>--cmd_file</NAME>
            <ALIAS>-@</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>Read options from specified file </TIP>
            <HELP>Read additional compile options the specified filename.</HELP>
        </OPTION>
        
        <OPTION tag='CODE_STATE'>
            <TYPE>simple</TYPE>
            <NAME>--code_state</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>32,16</DESCRIPTION>
                <ONEOF>32</ONEOF>
                <ONEOF>16</ONEOF>
            </ARG>
            <TIP>Designate code state, 16-bit (thumb) or 32-bit</TIP>
            <HELP>Designate code state, 16-bit (thumb) or 32-bit</HELP>
        </OPTION>
        
        <OPTION tag='COFF'>
            <TYPE>simple</TYPE>
            <NAME>--coff</NAME>
            <TIP>Use the COFF object file format</TIP>
            <HELP>Use the COFF object file format</HELP>
            <CHAIN>
                <TAG>OBJECT_FORMAT</TAG>
                <TEXT>--object_format=coff</TEXT>
            </CHAIN>
        </OPTION>
        
        <OPTION tag='COMPILE_ONLY'>
            <TYPE>cmdline</TYPE>
            <NAME>--compile_only</NAME>
            <ALIAS>-c</ALIAS>
            <TIP>Disable linking (overrides -z)</TIP>
            <HELP>Disable linking, overriding -z (if used).</HELP>
        </OPTION>
        
        <OPTION tag='COMPILER_REVISION'>
            <TYPE>cmdline</TYPE>
            <NAME>--compiler_revision</NAME>
            <TIP>Print compiler revision and exit</TIP>
            <HELP>Print out the compiler release revision and exit.</HELP>
        </OPTION>
        
        <OPTION tag='COPY_FILE'>
            <TYPE>simple</TYPE>
            <NAME>--copy_file</NAME>
            <ALIAS>-ahc</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>Simulate source &apos;.copy filename&apos;</TIP>
            <HELP>Simulate source &apos;.copy filename&apos;</HELP>
        </OPTION>
        
        <OPTION tag='CPP_DEFAULT'>
            <TYPE>simple</TYPE>
            <NAME>--cpp_default</NAME>
            <ALIAS>-fg</ALIAS>
            <TIP>Treat C files as C++ files</TIP>
            <HELP>Treat C files as C++ files</HELP>
        </OPTION>
        
        <OPTION tag='CPP_EXTENSION'>
            <TYPE>simple</TYPE>
            <NAME>--cpp_extension</NAME>
            <ALIAS>-ep</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>.ext</DESCRIPTION>
            </ARG>
            <TIP>Extension for C++ files (default is .cpp)</TIP>
            <HELP>Extension for C++ files (default is .cpp)</HELP>
        </OPTION>
        
        <OPTION tag='CPP_FILE'>
            <TYPE>simple</TYPE>
            <NAME>--cpp_file</NAME>
            <ALIAS>-fp</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>File is a C++ file (default for .C .cpp .cc)</TIP>
            <HELP>File is a C++ file (default for .C .cpp .cc)</HELP>
        </OPTION>
        
        <OPTION tag='CREATE_PCH'>
            <TYPE>simple</TYPE>
            <NAME>--create_pch</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>Create a precompiled header file as named</TIP>
            <HELP>Create a precompiled header file with the name specified. This option specifies the filename for the precompiled header file. If this option is not used, the precompiled header file will use the primiary source file name as its filename with .pch as suffix.</HELP>
        </OPTION>
        
        <OPTION tag='CROSS_REFERENCE'>
            <TYPE>simple</TYPE>
            <NAME>--cross_reference</NAME>
            <ALIAS>-ax</ALIAS>
            <TIP>Generate cross reference file</TIP>
            <HELP>Generate cross reference file</HELP>
        </OPTION>
        
        <OPTION tag='DEFINE'>
            <TYPE>simple</TYPE>
            <NAME>--define</NAME>
            <ALIAS>-D</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>NAME[=value]</DESCRIPTION>
            </ARG>
            <TIP>Pre-define NAME</TIP>
            <HELP>Pre-define a symbol with the id &apos;NAME&apos;, optionally setting it&apos;s contents to &apos;value&apos;.</HELP>
        </OPTION>
        
        <OPTION tag='DIAG_ERROR'>
            <TYPE>simple</TYPE>
            <NAME>--diag_error</NAME>
            <ALIAS>-pdse</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>id</DESCRIPTION>
            </ARG>
            <TIP>Treat diagnostic &lt;id&gt; as error</TIP>
            <HELP>Treat diagnostic &lt;id&gt; as error</HELP>
        </OPTION>
        
        <OPTION tag='DIAG_REMARK'>
            <TYPE>simple</TYPE>
            <NAME>--diag_remark</NAME>
            <ALIAS>-pdsr</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>id</DESCRIPTION>
            </ARG>
            <TIP>Treat diagnostic &lt;id&gt; as remark</TIP>
            <HELP>Treat diagnostic &lt;id&gt; as remark</HELP>
        </OPTION>
        
        <OPTION tag='DIAG_SUPPRESS'>
            <TYPE>simple</TYPE>
            <NAME>--diag_suppress</NAME>
            <ALIAS>-pds</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>id</DESCRIPTION>
            </ARG>
            <TIP>Suppress diagnostic &lt;id&gt;</TIP>
            <HELP>Suppress diagnostic &lt;id&gt;</HELP>
        </OPTION>
        
        <OPTION tag='DIAG_WARNING'>
            <TYPE>simple</TYPE>
            <NAME>--diag_warning</NAME>
            <ALIAS>-pdsw</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>id</DESCRIPTION>
            </ARG>
            <TIP>Treat diagnostic &lt;id&gt; as warning</TIP>
            <HELP>Treat diagnostic &lt;id&gt; as warning</HELP>
        </OPTION>
        
        <OPTION tag='DISABLE_BRANCH_CHAINING'>
            <TYPE>simple</TYPE>
            <NAME>--disable_branch_chaining</NAME>
            <TIP>Prevent generation of branch chains in Thumb mode</TIP>
            <HELP>Prevent generation of branch chains in Thumb mode</HELP>
        </OPTION>
        
        <OPTION tag='DISABLE_DUAL_STATE'>
            <TYPE>simple</TYPE>
            <NAME>--disable_dual_state</NAME>
            <ALIAS>-md</ALIAS>
            <TIP>No dual state support</TIP>
            <HELP>No dual state support</HELP>
        </OPTION>
        
        <OPTION tag='DISPLAY_ERROR_NUMBER'>
            <TYPE>simple</TYPE>
            <NAME>--display_error_number</NAME>
            <ALIAS>-pden</ALIAS>
            <TIP>Emit diagnostic identifier numbers</TIP>
            <HELP>Emit the diagnostic identifier numbers along with diagnostic messages.  These identifiers can be used with options such as -pds to suppress a specific diagnostic.</HELP>
        </OPTION>
        
        <OPTION tag='ELF'>
            <TYPE>simple</TYPE>
            <NAME>--elf</NAME>
            <TIP>Use the ELF object file format</TIP>
            <HELP>Use the ELF object file format</HELP>
            <CHAIN>
                <TAG>OBJECT_FORMAT</TAG>
                <TEXT>--object_format=elf</TEXT>
            </CHAIN>
        </OPTION>
        
        <OPTION tag='EMBEDDED_CPP'>
            <TYPE>simple</TYPE>
            <NAME>--embedded_cpp</NAME>
            <ALIAS>-pe</ALIAS>
            <TIP>Embedded C++</TIP>
            <HELP>Enable support for embedded C++</HELP>
            <RESETS>KR_COMPATIBLE</RESETS>
        </OPTION>
        
        <OPTION tag='ENTRY_HOOK'>
            <TYPE>simple</TYPE>
            <NAME>--entry_hook</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>hook_function_name</DESCRIPTION>
                <DEFAULT>__entry_hook</DEFAULT>
            </ARG>
            <TIP>Insert this call at entry to each function</TIP>
            <HELP>Insert this call at entry to each function</HELP>
        </OPTION>
        
        <OPTION tag='ENTRY_PARM'>
            <TYPE>simple</TYPE>
            <NAME>--entry_parm</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>none,name,address</DESCRIPTION>
                <ONEOF>none</ONEOF>
                <ONEOF>name</ONEOF>
                <ONEOF>address</ONEOF>
            </ARG>
            <TIP>Pass caller&apos;s name or address to entry hook</TIP>
            <HELP>Pass caller&apos;s name or address to entry hook</HELP>
        </OPTION>
        
        <OPTION tag='ENUM_TYPE'>
            <TYPE>simple</TYPE>
            <NAME>--enum_type</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>unpacked,int,packed</DESCRIPTION>
                <ONEOF>unpacked</ONEOF>
                <ONEOF>int</ONEOF>
                <ONEOF>packed</ONEOF>
                <DEFAULT>unpacked</DEFAULT>
            </ARG>
            <TIP>Designate enum type (Default is packed for EABI)</TIP>
            <HELP>Designate the underlying type of an enumeration type

packed   - Enumeration types are &quot;&quot;packed&quot;&quot;, that is the underlying type of an enumeration is chosen to be the smallest integer that will accommodate the enumeration constants.

int      - The underlying type is always int. An enumeration constant with value outside int range will generate an error.

unpacked - When neither of the above are specified, the underlying type is chosen based on the language standard and any other applicable language options.</HELP>
        </OPTION>
        
        <OPTION tag='EXCEPTIONS'>
            <TYPE>simple</TYPE>
            <NAME>--exceptions</NAME>
            <TIP>Enable C++ exception handling</TIP>
            <HELP>Enable C++ exception handling</HELP>
            <CHAIN>
                <TAG>RTTI</TAG>
                <TEXT>--rtti</TEXT>
            </CHAIN>
            <CHAIN>
                <TAG>DISABLE_CUSTOM_CALL_CONV</TAG>
                <TEXT>--disable_custom_call_conv</TEXT>
            </CHAIN>
        </OPTION>
        
        <OPTION tag='EXIT_HOOK'>
            <TYPE>simple</TYPE>
            <NAME>--exit_hook</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>hook_function_name</DESCRIPTION>
                <DEFAULT>__exit_hook</DEFAULT>
            </ARG>
            <TIP>Insert this call at exit from each function</TIP>
            <HELP>Insert this call at exit from each function</HELP>
        </OPTION>
        
        <OPTION tag='EXIT_PARM'>
            <TYPE>simple</TYPE>
            <NAME>--exit_parm</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>none,name,address</DESCRIPTION>
                <ONEOF>none</ONEOF>
                <ONEOF>name</ONEOF>
                <ONEOF>address</ONEOF>
            </ARG>
            <TIP>Pass caller&apos;s name or address to exit hook</TIP>
            <HELP>Pass caller&apos;s name or address to exit hook</HELP>
        </OPTION>
        
        <OPTION tag='EXTERN_C_CAN_THROW'>
            <TYPE>simple</TYPE>
            <NAME>--extern_c_can_throw</NAME>
            <TIP>Allow extern C functions to propagate exceptions</TIP>
            <HELP>This option is only supported under ARM EABI for Table Driven Exception Handling(TDEH). This option is valid only when `--exceptions` is also present. This option allows function defined in CPP files with extern `C` linkage to propagate exceptions.</HELP>
        </OPTION>
        
        <OPTION tag='FLOAT_SUPPORT'>
            <TYPE>simple</TYPE>
            <NAME>--float_support</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>vfplib,fpalib,VFPv2,VFPv3D16,VFPv3</DESCRIPTION>
                <ONEOF>vfplib</ONEOF>
                <ONEOF>fpalib</ONEOF>
                <ONEOF>VFPv2</ONEOF>
                <ONEOF>VFPv3D16</ONEOF>
                <ONEOF>VFPv3</ONEOF>
            </ARG>
            <TIP>Specify floating point support</TIP>
            <HELP>Specify floating point support</HELP>
        </OPTION>
        
        <OPTION tag='FP_MODE'>
            <TYPE>simple</TYPE>
            <NAME>--fp_mode</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>strict,relaxed</DESCRIPTION>
                <ONEOF>strict</ONEOF>
                <ONEOF>relaxed</ONEOF>
                <DEFAULT>strict</DEFAULT>
            </ARG>
            <TIP>Floating Point mode (Default is relaxed for EABI)</TIP>
            <HELP>Specify a floating point mode. In relaxed mode if the result of a double-precision floating point expression is assigned to a single-precision floating-point or an integer, the computations in the expression are converted to single-precision computations. Any double-precision constants in the expression are also converted to single-precision if they will fit. Floating point arithmetic reassociation is also allowed.  This behavior is not ISO conformant, but results in faster/smaller code, with some loss in accuracy.</HELP>
        </OPTION>
        
        <OPTION tag='FP_REASSOC'>
            <TYPE>simple</TYPE>
            <NAME>--fp_reassoc</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>off,on</DESCRIPTION>
                <ONEOF>off</ONEOF>
                <ONEOF>on</ONEOF>
                <DEFAULT>off</DEFAULT>
            </ARG>
            <TIP>Allow reassociation of FP arithmetic</TIP>
            <HELP>Set to on to allow reassociation of floating point arithmetic even in cases where the reassociation will result in a slightly different answer.</HELP>
        </OPTION>
        
        <OPTION tag='GCC'>
            <TYPE>simple</TYPE>
            <NAME>--gcc</NAME>
            <TIP>Enable support for GCC extensions</TIP>
            <HELP>This option enables the support for GCC extensions.  This feature is incompatilble with strict ANSI mode.</HELP>
            <CHAIN>
                <TAG>RELAXED_ANSI</TAG>
                <TEXT>--relaxed_ansi</TEXT>
            </CHAIN>
            <CONFLICT>STRICT_ANSI</CONFLICT>
        </OPTION>
        
        <OPTION tag='GEN_ACP_RAW'>
            <TYPE>simple</TYPE>
            <NAME>--gen_acp_raw</NAME>
            <ALIAS>-pl</ALIAS>
            <TIP>Output raw listing to .rl file</TIP>
            <HELP>Output raw listing to .rl file</HELP>
        </OPTION>
        
        <OPTION tag='GEN_ACP_XREF'>
            <TYPE>simple</TYPE>
            <NAME>--gen_acp_xref</NAME>
            <ALIAS>-px</ALIAS>
            <TIP>Output xref listing to .crl file</TIP>
            <HELP>Output xref listing to .crl file</HELP>
        </OPTION>
        
        <OPTION tag='GEN_AUX_USER_INFO'>
            <TYPE>simple</TYPE>
            <NAME>--gen_aux_user_info</NAME>
            <ALIAS>-b</ALIAS>
            <TIP>Generate user information file</TIP>
            <HELP>Generate auxillary user information file.</HELP>
        </OPTION>
        
        <OPTION tag='GEN_FUNC_SUBSECTIONS'>
            <TYPE>simple</TYPE>
            <NAME>--gen_func_subsections</NAME>
            <ALIAS>-ms</ALIAS>
            <TIP>Place each function in a separate subsection</TIP>
            <HELP>Place each function in a separate subsection</HELP>
        </OPTION>
        
        <OPTION tag='GEN_OPT_INFO'>
            <TYPE>simple</TYPE>
            <NAME>--gen_opt_info</NAME>
            <ALIAS>-on</ALIAS>
            <ARG>
                <TYPE>RANGE</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>0-2</DESCRIPTION>
                <RANGE low='0' high='2'/>
            </ARG>
            <TIP>Generate optimizer information file at level [0-2]</TIP>
            <HELP>Set the optimizer information file level, or disable with 0. Level 1 includes basic information.  Level 2 includes detailed information.  The file will be created in the assembly directory if a custom asm directory is specified on the command line otherwise it will be created in the object file directory.</HELP>
        </OPTION>
        
        <OPTION tag='GEN_PROFILE_INFO'>
            <TYPE>simple</TYPE>
            <NAME>--gen_profile_info</NAME>
            <TIP>Generate profile feedback data</TIP>
            <HELP>Instrument the object code that is generated for a compilation with path profiling information.  The compiler will annotate the code that is generated for an application so that, when executed, the application can generate information about which code paths were executed and how often.  This profile data can then be used by subsequent compiles to analyze code coverage or call graph information to assist with subsequent development.</HELP>
            <CONFLICT>ANALYZE</CONFLICT>
            <CONFLICT>USE_PROFILE_INFO</CONFLICT>
        </OPTION>
        
        <OPTION tag='GLOBAL_REGISTER'>
            <TYPE>simple</TYPE>
            <NAME>--global_register</NAME>
            <ALIAS>-r</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>r5,r6,r9</DESCRIPTION>
            </ARG>
            <TIP>Reserve as global register</TIP>
            <HELP>Reserve the specified register &apos;rx&apos; (r5, r6 or r9) as a global register for use by the user.  Disallow the use of that register by the compiler.</HELP>
        </OPTION>
        
        <OPTION tag='HELP'>
            <TYPE>cmdline</TYPE>
            <NAME>--help</NAME>
            <ALIAS>-h</ALIAS>
            <TIP>Show help screen</TIP>
            <HELP>Show usage information.  When followed by another option or a phrase display that option&apos;s detailed information, or search for options related to that phrase.</HELP>
        </OPTION>
        
        <OPTION tag='INCLUDE_FILE'>
            <TYPE>simple</TYPE>
            <NAME>--include_file</NAME>
            <ALIAS>-ahi</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>Simulate source &apos;.include filename&apos;</TIP>
            <HELP>Simulate source &apos;.include filename&apos;</HELP>
        </OPTION>
        
        <OPTION tag='INCLUDE_PATH'>
            <TYPE>simple</TYPE>
            <NAME>--include_path</NAME>
            <ALIAS>-I</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>dir</DESCRIPTION>
            </ARG>
            <TIP>Add dir to #include search path</TIP>
            <HELP>Add the specified dir(ectory) to the #include file search path list.</HELP>
        </OPTION>
        
        <OPTION tag='ISSUE_REMARKS'>
            <TYPE>simple</TYPE>
            <NAME>--issue_remarks</NAME>
            <ALIAS>-pdr</ALIAS>
            <TIP>Issue remarks</TIP>
            <HELP>Issue remarks, which are normally supressed.</HELP>
        </OPTION>
        
        <OPTION tag='KEEP_ASM'>
            <TYPE>simple</TYPE>
            <NAME>--keep_asm</NAME>
            <PREFERREDALIAS>-k</PREFERREDALIAS>
            <TIP>Keep the generated assembly language (.asm) file</TIP>
            <HELP>Keep the generated assembly language (.asm) file</HELP>
        </OPTION>
        
        <OPTION tag='KEEP_UNNEEDED_STATICS'>
            <TYPE>simple</TYPE>
            <NAME>--keep_unneeded_statics</NAME>
            <TIP>Do not delete unreferenced static variables</TIP>
            <HELP>The parser, by default, will remark about and then remove any unreferenced static variables.  This option will keep the parser from deleting unreferenced static variables and any static functions that are, in turn referenced by these variables.</HELP>
        </OPTION>
        
        <OPTION tag='KR_COMPATIBLE'>
            <TYPE>simple</TYPE>
            <NAME>--kr_compatible</NAME>
            <ALIAS>-pk</ALIAS>
            <TIP>K &amp; R compatibility</TIP>
            <HELP>Enable K &amp; R C compatibility.</HELP>
            <RESETS>EMBEDDED_CPP</RESETS>
        </OPTION>
        
        <OPTION tag='LIST_DIRECTORY'>
            <TYPE>simple</TYPE>
            <NAME>--list_directory</NAME>
            <ALIAS>-ff</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>dir</DESCRIPTION>
            </ARG>
            <TIP>Listing/xref file directory (default is .obj dir)</TIP>
            <HELP>Listing/xref file directory (default is .obj dir)</HELP>
            <CHAIN>
                <TAG>ASM_LISTING</TAG>
                <TEXT>--asm_listing</TEXT>
            </CHAIN>
        </OPTION>
        
        <OPTION tag='LISTING_EXTENSION'>
            <TYPE>simple</TYPE>
            <NAME>--listing_extension</NAME>
            <ALIAS>-es</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>.ext</DESCRIPTION>
            </ARG>
            <TIP>Extension for listing files (default is .lst)</TIP>
            <HELP>Extension for listing files (default is .lst)</HELP>
        </OPTION>
        
        <OPTION tag='LITTLE_ENDIAN'>
            <TYPE>simple</TYPE>
            <NAME>--little_endian</NAME>
            <PREFERREDALIAS>-me</PREFERREDALIAS>
            <TIP>Little endian code</TIP>
            <HELP>Little endian code</HELP>
            <CHAIN>
                <TAG>ENDIAN</TAG>
                <TEXT>--endian=little</TEXT>
            </CHAIN>
        </OPTION>
        
        <OPTION tag='MAX_BRANCH_CHAIN'>
            <TYPE>simple</TYPE>
            <NAME>--max_branch_chain</NAME>
            <ALIAS>-ab</ALIAS>
            <ARG>
                <TYPE>NUMBER</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>#</DESCRIPTION>
            </ARG>
            <TIP>Specify length of maximum branch chain</TIP>
            <HELP>The maximum number of jumps (branches) allowed to reach a branch label. Increasing the branch chain length causes slow down but may result in smaller code</HELP>
        </OPTION>
        
        <OPTION tag='MULTIBYTE_CHARS'>
            <TYPE>simple</TYPE>
            <NAME>--multibyte_chars</NAME>
            <ALIAS>-pc</ALIAS>
            <TIP>Multibyte character support</TIP>
            <HELP>Enable multibyte character support in the parser.</HELP>
        </OPTION>
        
        <OPTION tag='NEON'>
            <TYPE>simple</TYPE>
            <NAME>--neon</NAME>
            <TIP>Generates SIMD instructions targeting Neon</TIP>
            <HELP>Generates SIMD instructions targeting the Neon coprocessor</HELP>
        </OPTION>
        
        <OPTION tag='NO_CONST_CLINK'>
            <TYPE>simple</TYPE>
            <NAME>--no_const_clink</NAME>
            <TIP>Do not generate .clink for .const sections</TIP>
            <HELP>Do not generate .clink directives for const global arrays.  By default these arrays are placed in a .const subsection and conditionally linked.</HELP>
        </OPTION>
        
        <OPTION tag='NO_INLINING'>
            <TYPE>simple</TYPE>
            <NAME>--no_inlining</NAME>
            <ALIAS>-pi</ALIAS>
            <TIP>Ignore inline keyword</TIP>
            <HELP>Ignore the inline keyword while parsing.</HELP>
        </OPTION>
        
        <OPTION tag='NO_INTRINSICS'>
            <TYPE>simple</TYPE>
            <NAME>--no_intrinsics</NAME>
            <ALIAS>-pn</ALIAS>
            <TIP>Disable intrinsic functions</TIP>
            <HELP>Disable intrinsic functions in the parser.</HELP>
        </OPTION>
        
        <OPTION tag='NO_WARNINGS'>
            <TYPE>simple</TYPE>
            <NAME>--no_warnings</NAME>
            <ALIAS>-pdw</ALIAS>
            <TIP>Suppress warnings</TIP>
            <HELP>Suppress all parser warnings.</HELP>
        </OPTION>
        
        <OPTION tag='OBJ_DIRECTORY'>
            <TYPE>simple</TYPE>
            <NAME>--obj_directory</NAME>
            <ALIAS>-fr</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>dir</DESCRIPTION>
            </ARG>
            <TIP>Object file directory (default is .)</TIP>
            <HELP>Object file directory (default is .)</HELP>
        </OPTION>
        
        <OPTION tag='OBJ_EXTENSION'>
            <TYPE>simple</TYPE>
            <NAME>--obj_extension</NAME>
            <ALIAS>-eo</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>.ext</DESCRIPTION>
            </ARG>
            <TIP>Extension for object files (default is .obj)</TIP>
            <HELP>Extension for object files (default is .obj)</HELP>
        </OPTION>
        
        <OPTION tag='OBJ_FILE'>
            <TYPE>simple</TYPE>
            <NAME>--obj_file</NAME>
            <ALIAS>-fo</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>File is an object file (default for .obj)</TIP>
            <HELP>File is an object file (default for .obj)</HELP>
        </OPTION>
        
        <OPTION tag='OPT_FOR_SPEED'>
            <TYPE>simple</TYPE>
            <NAME>--opt_for_speed</NAME>
            <ALIAS>-mf</ALIAS>
            <ARG>
                <TYPE>RANGE</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>0-5</DESCRIPTION>
                <RANGE low='0' high='5'/>
                <DEFAULT>4</DEFAULT>
            </ARG>
            <TIP>Optimize for speed</TIP>
            <HELP>Optimize for speed</HELP>
        </OPTION>
        
        <OPTION tag='OPT_LEVEL'>
            <TYPE>simple</TYPE>
            <NAME>--opt_level</NAME>
            <PREFERREDALIAS>-O</PREFERREDALIAS>
            <ARG>
                <TYPE>RANGE</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>0-3</DESCRIPTION>
                <RANGE low='0' high='3'/>
                <DEFAULT>2</DEFAULT>
            </ARG>
            <TIP>Optimization level</TIP>
            <HELP>Set compiler optimization level.

Level 0 includes register optimizations.  Level 1 adds local optimizations. Level 2 further adds global optimizations. Level 3 further adds interprocedure optimizations.

Using -O without arguments defaults to -O2.</HELP>
        </OPTION>
        
        <OPTION tag='OPTIMIZE_WITH_DEBUG'>
            <TYPE>simple</TYPE>
            <NAME>--optimize_with_debug</NAME>
            <ALIAS>-mn</ALIAS>
            <TIP>Optimize fully in the presence of debug directives</TIP>
            <HELP>Optimize fully in the presence of debug directives</HELP>
        </OPTION>
        
        <OPTION tag='OPTIMIZER_INTERLIST'>
            <TYPE>simple</TYPE>
            <NAME>--optimizer_interlist</NAME>
            <ALIAS>-os</ALIAS>
            <TIP>Generate optimized source interlisted assembly</TIP>
            <HELP>Generate optimized source interlisted assembly</HELP>
        </OPTION>
        
        <OPTION tag='OUTPUT_ALL_SYMS'>
            <TYPE>simple</TYPE>
            <NAME>--output_all_syms</NAME>
            <ALIAS>-as</ALIAS>
            <TIP>Keep local symbols in output file</TIP>
            <HELP>Keep local symbols in output file</HELP>
        </OPTION>
        
        <OPTION tag='PCH'>
            <TYPE>simple</TYPE>
            <NAME>--pch</NAME>
            <TIP>Automatically create/use precompiled headers</TIP>
            <HELP>Automatically create and/or use precompiled header files. This option will enable EDG parser to provide a meachanism for, in effect, taking a snapshot of the state of the compilation at a particular point and writing it to a disk file before completing the parsing; then, when recompiling the same source file or compileing anther file with the same set of header files, it can recognize the `snapshot point`, and reload this file instead of recompile these headers. In this way, compilation time can be reduced.</HELP>
        </OPTION>
        
        <OPTION tag='PCH_DIR'>
            <TYPE>simple</TYPE>
            <NAME>--pch_dir</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>dir</DESCRIPTION>
            </ARG>
            <TIP>Specify precompiled header path</TIP>
            <HELP>Specify path where precompiled header file will reside. This option will direct the parser to put the generated precompiled header file in the specified directory. If this option is not used, the precompiled header file will be put into the same directory as the primary source file</HELP>
        </OPTION>
        
        <OPTION tag='PCH_VERBOSE'>
            <TYPE>simple</TYPE>
            <NAME>--pch_verbose</NAME>
            <TIP>Info on considered &amp; unused precompiled headers</TIP>
            <HELP>This option displays a message for each precompiled header file that is considered but can not be used. It also gives the reason why it can not be used.</HELP>
        </OPTION>
        
        <OPTION tag='PLAIN_CHAR'>
            <TYPE>simple</TYPE>
            <NAME>--plain_char</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>signed,unsigned</DESCRIPTION>
                <ONEOF>signed</ONEOF>
                <ONEOF>unsigned</ONEOF>
                <DEFAULT>unsigned</DEFAULT>
            </ARG>
            <TIP>Specify how to treat plain chars (signed/unsigned)</TIP>
            <HELP>Specify how to treat plain chars (signed/unsigned)</HELP>
        </OPTION>
        
        <OPTION tag='PREINCLUDE'>
            <TYPE>simple</TYPE>
            <NAME>--preinclude</NAME>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>Specify a preinclude file</TIP>
            <HELP>Include the source code of the indicated file at the beginning of the compilation. This can be used to establish standard macro definitions, etc. The file name is searched for in the directories on the include search list. The files are processed in the order in which they were specified.</HELP>
        </OPTION>
        
        <OPTION tag='PREPROC_DEPENDENCY'>
            <TYPE>cmdline</TYPE>
            <NAME>--preproc_dependency</NAME>
            <ALIAS>-ppd</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>Generate include file dependency information</TIP>
            <HELP>Generate a dependency list for the source file into the file &lt;filename&gt;.pp and then exit.  Optionally, name the output file.  The output will include all files included in the source file as well as any of the files included.  Also see the -ppa option to continue compilation after generating the dependency list (similar to gcc).</HELP>
        </OPTION>
        
        <OPTION tag='PREPROC_INCLUDES'>
            <TYPE>cmdline</TYPE>
            <NAME>--preproc_includes</NAME>
            <ALIAS>-ppi</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>Generate first-level include file list</TIP>
            <HELP>Generate an include list for the source file into the file &lt;filename&gt;.pp and then exit.  Optionally, name the output file.  The output will include only those files directly included by the source file.   Also see the -ppa option to continue compilation after generating the include list (similar to gcc).</HELP>
        </OPTION>
        
        <OPTION tag='PREPROC_MACROS'>
            <TYPE>cmdline</TYPE>
            <NAME>--preproc_macros</NAME>
            <ALIAS>-ppm</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>Generate list of pre- &amp; user-defined macros</TIP>
            <HELP>Generate a list of predefined and user defined macros for the source file into the file &lt;filename&gt;.pp and then exit.  Optionally, name the output file. The output will include only those files directly included by the source file.   Also see the -ppa option to continue compilation after generating the macro list (similar to gcc).</HELP>
        </OPTION>
        
        <OPTION tag='PREPROC_ONLY'>
            <TYPE>cmdline</TYPE>
            <NAME>--preproc_only</NAME>
            <ALIAS>-ppo</ALIAS>
            <TIP>Preprocess only</TIP>
            <HELP>Only preprocess the source file(s) and then stop.</HELP>
        </OPTION>
        
        <OPTION tag='PREPROC_WITH_COMMENT'>
            <TYPE>cmdline</TYPE>
            <NAME>--preproc_with_comment</NAME>
            <ALIAS>-ppc</ALIAS>
            <TIP>Preprocess only; maintain comments</TIP>
            <HELP>Only preprocess the source file(s) and then stop; maintain source comments in the output.</HELP>
        </OPTION>
        
        <OPTION tag='PREPROC_WITH_COMPILE'>
            <TYPE>cmdline</TYPE>
            <NAME>--preproc_with_compile</NAME>
            <ALIAS>-ppa</ALIAS>
            <TIP>Continue compilation after using -pp&lt;X&gt; options.</TIP>
            <HELP>This option instructs the compiler to additionally continue compilation of the source file (rather than exiting) after generating a pre-processing .pp output file such as those generated by -ppd (dependencies) -ppi (included files), or -ppm (macros).</HELP>
        </OPTION>
        
        <OPTION tag='PREPROC_WITH_LINE'>
            <TYPE>cmdline</TYPE>
            <NAME>--preproc_with_line</NAME>
            <ALIAS>-ppl</ALIAS>
            <TIP>Preprocess only; maintain line directives</TIP>
            <HELP>Only preprocess the source file(s) and then stop; maintain #line directives in the output..</HELP>
        </OPTION>
        
        <OPTION tag='PRINTF_SUPPORT'>
            <TYPE>simple</TYPE>
            <NAME>--printf_support</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>nofloat,full,minimal</DESCRIPTION>
                <ONEOF>nofloat</ONEOF>
                <ONEOF>full</ONEOF>
                <ONEOF>minimal</ONEOF>
            </ARG>
            <TIP>Level of printf support required</TIP>
            <HELP>Printf/sprintf functions use a common low level routine, _printfi which processes a given printf format string.  The full version of _printfi provides formatting capabalities that are not required in typical embedded applications. To address this the C runtime library also includes two limited of versions of _printfi that provide a useful subset of the formatting features specified by C library standard.

One version excludes support for printing floating values. All format specifiers except for %f, %g, %G, %e, or %E are supported. To specify this version use the option &apos;--printf_support=nofloat&apos; when linking.

The other version only supports printing of integer, char, or string values without width or precision flags.  Only %%, %d, %o, %c, %s and %x are supported.  To specify this version use the option &apos;--printf_support=minimal&apos; when linking.</HELP>
        </OPTION>
        
        <OPTION tag='PROFILE__BREAKPT'>
            <TYPE>simple</TYPE>
            <NAME>--profile:breakpt</NAME>
            <TIP>Compile for breakpoint-based profiling</TIP>
            <HELP>Disable optimizations that cannot be handled by a breakpoint-based profiler</HELP>
            <OVERRIDES>SYMDEBUG__NONE</OVERRIDES>
        </OPTION>
        
        <OPTION tag='PROFILE__POWER'>
            <TYPE>simple</TYPE>
            <NAME>--profile:power</NAME>
            <TIP>Compile for power profiling</TIP>
            <HELP>Enable power profiling support by inserting NOPs into the frame code.  These NOPs can then be instrumented by the power profiling tooling to track power usage of functions.  If the power profiling tool is not used, this option will increase the cycle count of each function because of the NOPs.  This switch also disables optimizations that cannot be handled by the power-profiler.</HELP>
            <OVERRIDES>SYMDEBUG__NONE</OVERRIDES>
        </OPTION>
        
        <OPTION tag='PROGRAM_LEVEL_COMPILE'>
            <TYPE>cmdline</TYPE>
            <NAME>--program_level_compile</NAME>
            <ALIAS>-pm</ALIAS>
            <TIP>Program mode compilation</TIP>
            <HELP>Enable program mode compilation.</HELP>
            <CHAIN>
                <TAG>NO_REMOVE_UNNEEDED_ENTITIES</TAG>
                <TEXT>--no_remove_unneeded_entities</TEXT>
            </CHAIN>
        </OPTION>
        
        <OPTION tag='QUIET'>
            <TYPE>simple</TYPE>
            <NAME>--quiet</NAME>
            <ALIAS>-q</ALIAS>
            <TIP>Quiet Mode</TIP>
            <HELP>Suppress common compiler non-diagnostic output.  Remarks, errors and warnings will still be generated, as well as feature specific status.</HELP>
            <RESETS>SUPER_QUIET</RESETS>
            <RESETS>VERBOSE</RESETS>
        </OPTION>
        
        <OPTION tag='RELAXED_ANSI'>
            <TYPE>simple</TYPE>
            <NAME>--relaxed_ansi</NAME>
            <ALIAS>-pr</ALIAS>
            <TIP>Relaxed parsing (non-strict ANSI)</TIP>
            <HELP>Enable relaxed ANSI source parsing mode.</HELP>
            <RESETS>STRICT_ANSI</RESETS>
        </OPTION>
        
        <OPTION tag='REMOVE_HOOKS_WHEN_INLINING'>
            <TYPE>simple</TYPE>
            <NAME>--remove_hooks_when_inlining</NAME>
            <TIP>Remove entry/exit hooks from inlined functions</TIP>
            <HELP>Remove the entry and exit hooks from the bodies of inlined functions.</HELP>
        </OPTION>
        
        <OPTION tag='RTTI'>
            <TYPE>simple</TYPE>
            <NAME>--rtti</NAME>
            <ALIAS>-rtti</ALIAS>
            <TIP>Support C++ run-time type information</TIP>
            <HELP>Support C++ run-time type information</HELP>
        </OPTION>
        
        <OPTION tag='RUN_LINKER'>
            <TYPE>cmdline</TYPE>
            <NAME>--run_linker</NAME>
            <ALIAS>-z</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>arguments</DESCRIPTION>
            </ARG>
            <TIP>Perform link using options following</TIP>
            <HELP>After compiling all the source files, perform a link and pass all the options following this option to the linker.</HELP>
        </OPTION>
        
        <OPTION tag='SAT_REASSOC'>
            <TYPE>simple</TYPE>
            <NAME>--sat_reassoc</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>off,on</DESCRIPTION>
                <ONEOF>off</ONEOF>
                <ONEOF>on</ONEOF>
                <DEFAULT>off</DEFAULT>
            </ARG>
            <TIP>Allow reassociation of sat arithmetic</TIP>
            <HELP>Set to on to allow reassociation of saturating arithmetic even in cases where the reassociation will cause saturation to occur differently.</HELP>
        </OPTION>
        
        <OPTION tag='SET_ERROR_LIMIT'>
            <TYPE>simple</TYPE>
            <NAME>--set_error_limit</NAME>
            <ALIAS>-pdel</ALIAS>
            <ARG>
                <TYPE>NUMBER</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>count</DESCRIPTION>
            </ARG>
            <TIP>Set error limit to &lt;count&gt;</TIP>
            <HELP>Set error limit to &lt;count&gt;</HELP>
        </OPTION>
        
        <OPTION tag='SIGNED_CHARS'>
            <TYPE>simple</TYPE>
            <NAME>--signed_chars</NAME>
            <ALIAS>-mc</ALIAS>
            <TIP>Chars signed by default</TIP>
            <HELP>Chars signed by default</HELP>
            <CHAIN>
                <TAG>PLAIN_CHAR</TAG>
                <TEXT>--plain_char=signed</TEXT>
            </CHAIN>
        </OPTION>
        
        <OPTION tag='SILICON_VERSION'>
            <TYPE>simple</TYPE>
            <NAME>--silicon_version</NAME>
            <PREFERREDALIAS>-mv</PREFERREDALIAS>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>7R4,7M3,7A8,6,4,5e</DESCRIPTION>
                <ONEOF>7R4</ONEOF>
                <ONEOF>7M3</ONEOF>
                <ONEOF>7A8</ONEOF>
                <ONEOF>6</ONEOF>
                <ONEOF>4</ONEOF>
                <ONEOF>5e</ONEOF>
                <DEFAULT>4</DEFAULT>
            </ARG>
            <TIP>Target processor version</TIP>
            <HELP>Select target processor version.  Silicon version 4 is ARM7. 5e is ARM9E.6 is ARM11. 7A8 is Cortex-A8. 7M3 is Cortex-M3. 7R4 is Cortex-R4.</HELP>
        </OPTION>
        
        <OPTION tag='SINGLE_INLINE'>
            <TYPE>simple</TYPE>
            <NAME>--single_inline</NAME>
            <TIP>Inline functions only called once.</TIP>
            <HELP>Inline function that are called only once.  Will inline these functions even if auto inlining has been turned off (-oi0)</HELP>
        </OPTION>
        
        <OPTION tag='SKIP_ASSEMBLER'>
            <TYPE>cmdline</TYPE>
            <NAME>--skip_assembler</NAME>
            <ALIAS>-n</ALIAS>
            <TIP>Compile only; do not assemble</TIP>
            <HELP>Compile only; do not assemble</HELP>
            <CHAIN>
                <TAG>KEEP_ASM</TAG>
                <TEXT>--keep_asm</TEXT>
            </CHAIN>
        </OPTION>
        
        <OPTION tag='SMALL_ENUM'>
            <TYPE>simple</TYPE>
            <NAME>--small_enum</NAME>
            <ALIAS>--small-enum</ALIAS>
            <TIP>Enums may be char/short, instead of int</TIP>
            <HELP>Enums may be char/short, instead of int</HELP>
            <CHAIN>
                <TAG>ENUM_TYPE</TAG>
                <TEXT>--enum_type=packed</TEXT>
            </CHAIN>
        </OPTION>
        
        <OPTION tag='SRC_INTERLIST'>
            <TYPE>simple</TYPE>
            <NAME>--src_interlist</NAME>
            <ALIAS>-s</ALIAS>
            <TIP>Generate interlisted assembly file</TIP>
            <HELP>Generate interlisted assembly file</HELP>
            <OVERRIDES>C_SRC_INTERLIST</OVERRIDES>
        </OPTION>
        
        <OPTION tag='STACK_OVERFLOW_CHECK'>
            <TYPE>simple</TYPE>
            <NAME>--stack_overflow_check</NAME>
            <ALIAS>-mo</ALIAS>
            <TIP>Enable dynamic stack overflow checking</TIP>
            <HELP>Enable dynamic stack overflow checking</HELP>
        </OPTION>
        
        <OPTION tag='STATIC_TEMPLATE_INSTANTIATION'>
            <TYPE>simple</TYPE>
            <NAME>--static_template_instantiation</NAME>
            <TIP>Do static early template instantiation</TIP>
            <HELP>All template entities are instantiated as needed in the file.  The instantiations are given internal (static) linkage.</HELP>
        </OPTION>
        
        <OPTION tag='STD_LIB_FUNC_DEFINED'>
            <TYPE>singlefile</TYPE>
            <NAME>--std_lib_func_defined</NAME>
            <ALIAS>-ol1</ALIAS>
            <TIP>File contains an RTS library function.</TIP>
            <HELP>File contains an RTS library function.</HELP>
        </OPTION>
        
        <OPTION tag='STD_LIB_FUNC_NOT_DEFINED'>
            <TYPE>singlefile</TYPE>
            <NAME>--std_lib_func_not_defined</NAME>
            <ALIAS>-ol2</ALIAS>
            <TIP>File does not define any RTS library func (def.)</TIP>
            <HELP>File does not define any RTS library func (def.)</HELP>
        </OPTION>
        
        <OPTION tag='STD_LIB_FUNC_REDEFINED'>
            <TYPE>singlefile</TYPE>
            <NAME>--std_lib_func_redefined</NAME>
            <ALIAS>-ol0</ALIAS>
            <TIP>File redefines an RTS library function.</TIP>
            <HELP>File redefines an RTS library function.</HELP>
        </OPTION>
        
        <OPTION tag='STRICT_ANSI'>
            <TYPE>simple</TYPE>
            <NAME>--strict_ansi</NAME>
            <ALIAS>-ps</ALIAS>
            <TIP>Strict ANSI mode (errors)</TIP>
            <HELP>Enable strict ANSI source parsing mode.  Any source violating strict ANSI guidelines will generate a parsing error.</HELP>
            <CHAIN>
                <TAG>FP_MODE</TAG>
                <TEXT>--fp_mode=strict</TEXT>
            </CHAIN>
            <CHAIN>
                <TAG>FP_REASSOC</TAG>
                <TEXT>--fp_reassoc=off</TEXT>
            </CHAIN>
            <CONFLICT>GCC</CONFLICT>
            <RESETS>RELAXED_ANSI</RESETS>
        </OPTION>
        
        <OPTION tag='SUPER_QUIET'>
            <TYPE>simple</TYPE>
            <NAME>--super_quiet</NAME>
            <ALIAS>-qq</ALIAS>
            <TIP>Super Quiet Mode</TIP>
            <HELP>Suppress all compiler non-diagnostic output.  Remarks, errors and warnings will still be generated.</HELP>
            <RESETS>QUIET</RESETS>
            <RESETS>VERBOSE</RESETS>
        </OPTION>
        
        <OPTION tag='SYMDEBUG__COFF'>
            <TYPE>simple</TYPE>
            <NAME>--symdebug:coff</NAME>
            <TIP>Full symbolic debug (COFF, deprecated)</TIP>
            <HELP>Enable full symbolic COFF debugging in the generated object or out file (DEPRECATED).</HELP>
            <OVERRIDES>SYMDEBUG__SKELETAL</OVERRIDES>
            <OVERRIDES>SYMDEBUG__PROFILE_COFF</OVERRIDES>
            <OVERRIDES>SYMDEBUG__DWARF</OVERRIDES>
            <OVERRIDES>SYMDEBUG__NONE</OVERRIDES>
        </OPTION>
        
        <OPTION tag='SYMDEBUG__DWARF'>
            <TYPE>simple</TYPE>
            <NAME>--symdebug:dwarf</NAME>
            <PREFERREDALIAS>-g</PREFERREDALIAS>
            <TIP>Full symbolic debug</TIP>
            <HELP>Enable full symbolic DWARF debugging in the generated object or out file.</HELP>
            <OVERRIDES>SYMDEBUG__SKELETAL</OVERRIDES>
            <OVERRIDES>SYMDEBUG__PROFILE_COFF</OVERRIDES>
            <OVERRIDES>SYMDEBUG__COFF</OVERRIDES>
            <OVERRIDES>SYMDEBUG__NONE</OVERRIDES>
        </OPTION>
        
        <OPTION tag='SYMDEBUG__DWARF_VERSION'>
            <TYPE>simple</TYPE>
            <NAME>--symdebug:dwarf_version</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>2,3</DESCRIPTION>
                <ONEOF>2</ONEOF>
                <ONEOF>3</ONEOF>
            </ARG>
            <TIP>Specify DWARF version</TIP>
            <HELP>Specify DWARF version</HELP>
            <CONFLICT>SYMDEBUG__PROFILE_COFF</CONFLICT>
            <CONFLICT>SYMDEBUG__COFF</CONFLICT>
            <CONFLICT>SYMDEBUG__NONE</CONFLICT>
        </OPTION>
        
        <OPTION tag='SYMDEBUG__KEEP_ALL_TYPES'>
            <TYPE>simple</TYPE>
            <NAME>--symdebug:keep_all_types</NAME>
            <TIP>Keep unreferenced type info (default for elf w/ debug)</TIP>
            <HELP>Keep referenced type info (default for elf w/ debug)</HELP>
            <CHAIN>
                <TAG>KEEP_UNNEEDED_TYPES</TAG>
                <TEXT>--keep_unneeded_types=true</TEXT>
            </CHAIN>
        </OPTION>
        
        <OPTION tag='SYMDEBUG__NONE'>
            <TYPE>simple</TYPE>
            <NAME>--symdebug:none</NAME>
            <TIP>Suppress all symbolic debug generation</TIP>
            <HELP>Disable debug and suppress all symbolic debug information from being included in the generated object or out file.</HELP>
            <CONFLICT>OCS_ACTIVE</CONFLICT>
            <OVERRIDES>SYMDEBUG__SKELETAL</OVERRIDES>
            <OVERRIDES>SYMDEBUG__PROFILE_COFF</OVERRIDES>
            <OVERRIDES>SYMDEBUG__COFF</OVERRIDES>
            <OVERRIDES>PROFILE__POWER</OVERRIDES>
            <OVERRIDES>SYMDEBUG__DWARF</OVERRIDES>
            <OVERRIDES>PROFILE__BREAKPT</OVERRIDES>
        </OPTION>
        
        <OPTION tag='SYMDEBUG__PROFILE_COFF'>
            <TYPE>simple</TYPE>
            <NAME>--symdebug:profile_coff</NAME>
            <TIP>Function profile debug (COFF, deprecated)</TIP>
            <HELP>Adds the necessary debug directives to the object file which are needed by the profiler to allow function level profiling with minimal impact on optimization (if optimization is enabled). Using -g may hinder some optimizations to ensure that debuggability is maintained, while this option will not hinder optimization.

You will still be able to set breakpoints and profile on function-level boundaries, but you will not be able to single-step through code as with full debug ability.</HELP>
            <OVERRIDES>SYMDEBUG__SKELETAL</OVERRIDES>
            <OVERRIDES>SYMDEBUG__COFF</OVERRIDES>
            <OVERRIDES>SYMDEBUG__DWARF</OVERRIDES>
            <OVERRIDES>SYMDEBUG__NONE</OVERRIDES>
        </OPTION>
        
        <OPTION tag='SYMDEBUG__SKELETAL'>
            <TYPE>simple</TYPE>
            <NAME>--symdebug:skeletal</NAME>
            <TIP>Symbolic debug for program analysis (default)</TIP>
            <HELP>Enable symbolic debug information for program analysis. (default)</HELP>
            <OVERRIDES>SYMDEBUG__PROFILE_COFF</OVERRIDES>
            <OVERRIDES>SYMDEBUG__COFF</OVERRIDES>
            <OVERRIDES>SYMDEBUG__DWARF</OVERRIDES>
            <OVERRIDES>SYMDEBUG__NONE</OVERRIDES>
        </OPTION>
        
        <OPTION tag='SYMS_IGNORE_CASE'>
            <TYPE>simple</TYPE>
            <NAME>--syms_ignore_case</NAME>
            <ALIAS>-ac</ALIAS>
            <TIP>Symbol names are not case-significant</TIP>
            <HELP>Symbol names are not case-significant</HELP>
        </OPTION>
        
        <OPTION tag='TEMP_DIRECTORY'>
            <TYPE>simple</TYPE>
            <NAME>--temp_directory</NAME>
            <ALIAS>-ft</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>dir</DESCRIPTION>
            </ARG>
            <TIP>Temporary file directory (default is .)</TIP>
            <HELP>Temporary file directory (default is .)</HELP>
        </OPTION>
        
        <OPTION tag='THUMB_STATE'>
            <TYPE>simple</TYPE>
            <NAME>--thumb_state</NAME>
            <PREFERREDALIAS>-mt</PREFERREDALIAS>
            <TIP>Enable 16 bit code</TIP>
            <HELP>Enable 16 bit code</HELP>
            <CHAIN>
                <TAG>CODE_STATE</TAG>
                <TEXT>--code_state=16</TEXT>
            </CHAIN>
        </OPTION>
        
        <OPTION tag='TOOL_VERSION'>
            <TYPE>simple</TYPE>
            <NAME>--tool_version</NAME>
            <ALIAS>-version</ALIAS>
            <TIP>Print version numbers for each tool</TIP>
            <HELP>Print version numbers for each tool</HELP>
        </OPTION>
        
        <OPTION tag='UAL'>
            <TYPE>simple</TYPE>
            <NAME>--ual</NAME>
            <TIP>Use unified assembly language</TIP>
            <HELP>The ARM unified assembly language (UAL) is used for processing assembly files.  This is automatic for v7 targets and above.  This option allows the use of UAL for earlier architectures.</HELP>
        </OPTION>
        
        <OPTION tag='UNDEFINE'>
            <TYPE>simple</TYPE>
            <NAME>--undefine</NAME>
            <ALIAS>-U</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>NAME</DESCRIPTION>
            </ARG>
            <TIP>Undefine NAME</TIP>
            <HELP>Undefine the symbol with the id &apos;NAME&apos;.</HELP>
        </OPTION>
        
        <OPTION tag='USE_DEAD_FUNCS_LIST'>
            <TYPE>simple</TYPE>
            <NAME>--use_dead_funcs_list</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>fname</DESCRIPTION>
            </ARG>
            <TIP>Use linker-generated file to remove dead functions</TIP>
            <HELP>The dead functions list contains list of routines that are never referenced. Placing them in a separate section can potentially reduce code size</HELP>
        </OPTION>
        
        <OPTION tag='USE_PCH'>
            <TYPE>simple</TYPE>
            <NAME>--use_pch</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>filename</DESCRIPTION>
            </ARG>
            <TIP>Precompiled header file for compilation</TIP>
            <HELP>This option specifies the file name of the precompiler header file for this compilation.</HELP>
        </OPTION>
        
        <OPTION tag='USE_PROFILE_INFO'>
            <TYPE>simple</TYPE>
            <NAME>--use_profile_info</NAME>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>filelist</DESCRIPTION>
            </ARG>
            <TIP>Use profile feedback file(s)</TIP>
            <HELP>This option is used in combination with the --analyze option to generate analysis information about code coverage or call graph information in the form of CSV files.  This information can then be read and interpreted by other tools.  For example, the cache layout tool, clt6x, can be used to interpret the call graph information and produce a preferred function order that can be incorporated into the application link.  The compiler can only generate one kind of analysis information for a given invocation of the compiler.</HELP>
            <CONFLICT>GEN_PROFILE_INFO</CONFLICT>
        </OPTION>
        
        <OPTION tag='VERBOSE'>
            <TYPE>simple</TYPE>
            <NAME>--verbose</NAME>
            <TIP>Display banner and function progress information</TIP>
            <HELP>Display progress information and toolset version when executing.</HELP>
            <RESETS>QUIET</RESETS>
            <RESETS>SUPER_QUIET</RESETS>
        </OPTION>
        
        <OPTION tag='VERBOSE_DIAGNOSTICS'>
            <TYPE>simple</TYPE>
            <NAME>--verbose_diagnostics</NAME>
            <ALIAS>-pdv</ALIAS>
            <TIP>Verbose diagnostics</TIP>
            <HELP>Enable verbose diagnostic information from the parser, including the source line of the error and an indicator of the error position within the line.</HELP>
        </OPTION>
        
        <OPTION tag='WRITE_DIAGNOSTICS_FILE'>
            <TYPE>simple</TYPE>
            <NAME>--write_diagnostics_file</NAME>
            <ALIAS>-pdf</ALIAS>
            <TIP>Output diagnostic to .err file</TIP>
            <HELP>Write diagnostics to an .err file instead of the standard output.  The file name with be the same as the source file but with an .err extension.</HELP>
        </OPTION>
        
        <MUTEX tag='MUTEX_QUIET_LEVEL'>
            <NAME>Quiet Level</NAME>
            
            <SEVERITY>RESET</SEVERITY>
            <STATUS>optional</STATUS>
            <MEMBER>VERBOSE</MEMBER>
            <MEMBER>QUIET</MEMBER>
            <MEMBER>SUPER_QUIET</MEMBER>
        </MUTEX>
        <MUTEX tag='MUTEX_DEBUGGING_MODEL'>
            <NAME>Debugging model</NAME>
            
            <SEVERITY>OVERRIDE</SEVERITY>
            <STATUS>optional</STATUS>
            <MEMBER>SYMDEBUG__DWARF</MEMBER>
            <MEMBER>SYMDEBUG__COFF</MEMBER>
            <MEMBER>SYMDEBUG__PROFILE_COFF</MEMBER>
            <MEMBER>SYMDEBUG__NONE</MEMBER>
            <MEMBER>SYMDEBUG__SKELETAL</MEMBER>
        </MUTEX>
        <MUTEX tag='MUTEX_SOURCE_INTERLIST'>
            <NAME>Source interlist</NAME>
            
            <SEVERITY>OVERRIDE</SEVERITY>
            <STATUS>optional</STATUS>
            <MEMBER>SRC_INTERLIST</MEMBER>
            <MEMBER>C_SRC_INTERLIST</MEMBER>
        </MUTEX>
        <MUTEX tag='MUTEX_C_C___DIALECT'>
            <NAME>C/C++ Dialect</NAME>
            
            <SEVERITY>RESET</SEVERITY>
            <STATUS>optional</STATUS>
            <MEMBER>EMBEDDED_CPP</MEMBER>
            <MEMBER>KR_COMPATIBLE</MEMBER>
        </MUTEX>
        <MUTEX tag='MUTEX_LANGUAGE_MODE'>
            <NAME>Language mode</NAME>
            
            <SEVERITY>RESET</SEVERITY>
            <STATUS>optional</STATUS>
            <MEMBER>RELAXED_ANSI</MEMBER>
            <MEMBER>STRICT_ANSI</MEMBER>
        </MUTEX>
    </DEFINITIONS>
    <BASIC>
        <MEMBER>SILICON_VERSION</MEMBER>
        <MEMBER>THUMB_STATE</MEMBER>
        <MEMBER>MUTEX_DEBUGGING_MODEL</MEMBER>
        <MEMBER>OPT_LEVEL</MEMBER>
        <MEMBER>OPT_FOR_SPEED</MEMBER>
    </BASIC>
    <CATEGORY tag='CONTROL'>
        <NAME>Control Options:</NAME>
        
        <MEMBER>SKIP_ASSEMBLER</MEMBER>
        <MEMBER>COMPILE_ONLY</MEMBER>
        <MEMBER>HELP</MEMBER>
        <MEMBER>RUN_LINKER</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='SYMDEBUG'>
        <NAME>Symbolic Debug Options:</NAME>
        
        <MEMBER>MUTEX_DEBUGGING_MODEL</MEMBER>
        <MEMBER>SYMDEBUG__DWARF_VERSION</MEMBER>
        <MEMBER>SYMDEBUG__KEEP_ALL_TYPES</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='PARSER'>
        <NAME>Language Options:</NAME>
        
        <MEMBER>MUTEX_C_C___DIALECT</MEMBER>
        <MEMBER>MUTEX_LANGUAGE_MODE</MEMBER>
        <MEMBER>CREATE_PCH</MEMBER>
        <MEMBER>NO_INTRINSICS</MEMBER>
        <MEMBER>MULTIBYTE_CHARS</MEMBER>
        <MEMBER>EXTERN_C_CAN_THROW</MEMBER>
        <MEMBER>USE_PCH</MEMBER>
        <MEMBER>EXCEPTIONS</MEMBER>
        <MEMBER>PCH</MEMBER>
        <MEMBER>GEN_ACP_XREF</MEMBER>
        <MEMBER>PCH_DIR</MEMBER>
        <MEMBER>FP_MODE</MEMBER>
        <MEMBER>KEEP_UNNEEDED_STATICS</MEMBER>
        <MEMBER>RTTI</MEMBER>
        <MEMBER>CPP_DEFAULT</MEMBER>
        <MEMBER>GCC</MEMBER>
        <MEMBER>NO_INLINING</MEMBER>
        <MEMBER>PCH_VERBOSE</MEMBER>
        <MEMBER>STATIC_TEMPLATE_INSTANTIATION</MEMBER>
        <MEMBER>PROGRAM_LEVEL_COMPILE</MEMBER>
        <MEMBER>GEN_ACP_RAW</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='PREPROC'>
        <NAME>Parser Preprocessing Options:</NAME>
        
        <MEMBER>PREPROC_ONLY</MEMBER>
        <MEMBER>PREPROC_WITH_COMPILE</MEMBER>
        <MEMBER>PREPROC_MACROS</MEMBER>
        <MEMBER>PREPROC_WITH_COMMENT</MEMBER>
        <MEMBER>PREPROC_INCLUDES</MEMBER>
        <MEMBER>PREPROC_WITH_LINE</MEMBER>
        <MEMBER>PREPROC_DEPENDENCY</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='DEFINES'>
        <NAME>Predefined Symbols:</NAME>
        
        <MEMBER>DEFINE</MEMBER>
        <MEMBER>UNDEFINE</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='INCLUDES'>
        <NAME>Include Options:</NAME>
        
        <MEMBER>PREINCLUDE</MEMBER>
        <MEMBER>INCLUDE_PATH</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='PDIAG'>
        <NAME>Diagnostic Options:</NAME>
        
        <MEMBER>MUTEX_QUIET_LEVEL</MEMBER>
        <MEMBER>VERBOSE_DIAGNOSTICS</MEMBER>
        <MEMBER>DIAG_WARNING</MEMBER>
        <MEMBER>SET_ERROR_LIMIT</MEMBER>
        <MEMBER>GEN_AUX_USER_INFO</MEMBER>
        <MEMBER>WRITE_DIAGNOSTICS_FILE</MEMBER>
        <MEMBER>DIAG_REMARK</MEMBER>
        <MEMBER>DIAG_ERROR</MEMBER>
        <MEMBER>COMPILER_REVISION</MEMBER>
        <MEMBER>DISPLAY_ERROR_NUMBER</MEMBER>
        <MEMBER>NO_WARNINGS</MEMBER>
        <MEMBER>DIAG_SUPPRESS</MEMBER>
        <MEMBER>ISSUE_REMARKS</MEMBER>
        <MEMBER>TOOL_VERSION</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='MODEL'>
        <NAME>Runtime Model Options:</NAME>
        
        <MEMBER>SILICON_VERSION</MEMBER>
        <MEMBER>THUMB_STATE</MEMBER>
        <MEMBER>LITTLE_ENDIAN</MEMBER>
        <MEMBER>ENUM_TYPE</MEMBER>
        <MEMBER>ALIGN_STRUCTS</MEMBER>
        <MEMBER>OPTIMIZE_WITH_DEBUG</MEMBER>
        <MEMBER>GLOBAL_REGISTER</MEMBER>
        <MEMBER>ELF</MEMBER>
        <MEMBER>COFF</MEMBER>
        <MEMBER>SAT_REASSOC</MEMBER>
        <MEMBER>PROFILE__POWER</MEMBER>
        <MEMBER>FP_REASSOC</MEMBER>
        <MEMBER>GEN_FUNC_SUBSECTIONS</MEMBER>
        <MEMBER>USE_DEAD_FUNCS_LIST</MEMBER>
        <MEMBER>ABI</MEMBER>
        <MEMBER>SMALL_ENUM</MEMBER>
        <MEMBER>STACK_OVERFLOW_CHECK</MEMBER>
        <MEMBER>CODE_STATE</MEMBER>
        <MEMBER>NEON</MEMBER>
        <MEMBER>FLOAT_SUPPORT</MEMBER>
        <MEMBER>PLAIN_CHAR</MEMBER>
        <MEMBER>MAX_BRANCH_CHAIN</MEMBER>
        <MEMBER>SIGNED_CHARS</MEMBER>
        <MEMBER>DISABLE_DUAL_STATE</MEMBER>
        <MEMBER>DISABLE_BRANCH_CHAINING</MEMBER>
        <MEMBER>PROFILE__BREAKPT</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='OPTIM'>
        <NAME>Optimizations:</NAME>
        
        <MEMBER>OPT_LEVEL</MEMBER>
        <MEMBER>OPT_FOR_SPEED</MEMBER>
        <MEMBER>OPTIMIZER_INTERLIST</MEMBER>
        <MEMBER>CALL_ASSUMPTIONS</MEMBER>
        <MEMBER>AUTO_INLINE</MEMBER>
        <MEMBER>SINGLE_INLINE</MEMBER>
        <MEMBER>REMOVE_HOOKS_WHEN_INLINING</MEMBER>
        <MEMBER>GEN_OPT_INFO</MEMBER>
        <MEMBER>ALIASED_VARIABLES</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='HOOK'>
        <NAME>Entry/Exit Hook Options:</NAME>
        
        <MEMBER>ENTRY_HOOK</MEMBER>
        <MEMBER>ENTRY_PARM</MEMBER>
        <MEMBER>EXIT_HOOK</MEMBER>
        <MEMBER>EXIT_PARM</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='FEEDBACK'>
        <NAME>Feedback Options:</NAME>
        
        <MEMBER>GEN_PROFILE_INFO</MEMBER>
        <MEMBER>ANALYZE</MEMBER>
        <MEMBER>USE_PROFILE_INFO</MEMBER>
        <MEMBER>ANALYZE_ONLY</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='LIB'>
        <NAME>Library Function Assumptions:</NAME>
        
        <MEMBER>PRINTF_SUPPORT</MEMBER>
        <MEMBER>STD_LIB_FUNC_NOT_DEFINED</MEMBER>
        <MEMBER>STD_LIB_FUNC_REDEFINED</MEMBER>
        <MEMBER>STD_LIB_FUNC_DEFINED</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='ASM'>
        <NAME>Assembler Options:</NAME>
        
        <MEMBER>KEEP_ASM</MEMBER>
        <MEMBER>MUTEX_SOURCE_INTERLIST</MEMBER>
        <MEMBER>ASM_LISTING</MEMBER>
        <MEMBER>OUTPUT_ALL_SYMS</MEMBER>
        <MEMBER>NO_CONST_CLINK</MEMBER>
        <MEMBER>COPY_FILE</MEMBER>
        <MEMBER>SYMS_IGNORE_CASE</MEMBER>
        <MEMBER>UAL</MEMBER>
        <MEMBER>ASM_UNDEFINE</MEMBER>
        <MEMBER>INCLUDE_FILE</MEMBER>
        <MEMBER>ASM_DEFINE</MEMBER>
        <MEMBER>ASM_INCLUDES</MEMBER>
        <MEMBER>CROSS_REFERENCE</MEMBER>
        <MEMBER>ASM_DEPENDENCY</MEMBER>
        <MEMBER>ABSOLUTE_LISTING</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='FILE'>
        <NAME>File Type Specifier:</NAME>
        
        <MEMBER>C_FILE</MEMBER>
        <MEMBER>ASM_FILE</MEMBER>
        <MEMBER>OBJ_FILE</MEMBER>
        <MEMBER>CPP_FILE</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='DIRECTORY'>
        <NAME>Directory Specifier:</NAME>
        
        <MEMBER>TEMP_DIRECTORY</MEMBER>
        <MEMBER>ASM_DIRECTORY</MEMBER>
        <MEMBER>OBJ_DIRECTORY</MEMBER>
        <MEMBER>ABS_DIRECTORY</MEMBER>
        <MEMBER>LIST_DIRECTORY</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='FILEEXT'>
        <NAME>Default File Extensions:</NAME>
        
        <MEMBER>OBJ_EXTENSION</MEMBER>
        <MEMBER>LISTING_EXTENSION</MEMBER>
        <MEMBER>CPP_EXTENSION</MEMBER>
        <MEMBER>ASM_EXTENSION</MEMBER>
        <MEMBER>C_EXTENSION</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='CMDFILES'>
        <NAME>Command Files:</NAME>
        
        <MEMBER>CMD_FILE</MEMBER>
    </CATEGORY>
    
</TOOL>
<TOOL>
    <TAG>LINKER</TAG>
    <TOOLNAME>C/C++ LINKER</TOOLNAME>
    <DEFINITIONS>
        <OPTION tag='ABSOLUTE_EXE'>
            <TYPE>simple</TYPE>
            <NAME>--absolute_exe</NAME>
            <ALIAS>-a</ALIAS>
            <TIP>Produce absolute executable object file (default)</TIP>
            <HELP>Produce absolute executable object file (default)</HELP>
        </OPTION>
        
        <OPTION tag='ARG_SIZE'>
            <TYPE>simple</TYPE>
            <NAME>--arg_size</NAME>
            <ALIAS>--args</ALIAS>
            <ARG>
                <TYPE>HEXNUMBER</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>size</DESCRIPTION>
            </ARG>
            <TIP>Set C argc/argv memory size</TIP>
            <HELP>Set C argc/argv memory size</HELP>
        </OPTION>
        
        <OPTION tag='BE32'>
            <TYPE>simple</TYPE>
            <NAME>--be32</NAME>
            <TIP>Link big-endian code in be-32 format</TIP>
            <HELP>Link big-endian code in be-32 format</HELP>
            <CONFLICT>BE8</CONFLICT>
        </OPTION>
        
        <OPTION tag='BE8'>
            <TYPE>simple</TYPE>
            <NAME>--be8</NAME>
            <TIP>Link big-endian code in be-8 format</TIP>
            <HELP>Link big-endian code in be-8 format</HELP>
            <CONFLICT>BE32</CONFLICT>
        </OPTION>
        
        <OPTION tag='CINIT_COMPRESSION'>
            <TYPE>simple</TYPE>
            <NAME>--cinit_compression</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>compression_kind</DESCRIPTION>
                <DEFAULT>rle</DEFAULT>
            </ARG>
            <TIP>Compress ELF C style auto initialization data</TIP>
            <HELP>Specify the compression to apply to the c auto initialization data</HELP>
        </OPTION>
        
        <OPTION tag='COMPRESS_DWARF'>
            <TYPE>simple</TYPE>
            <NAME>--compress_dwarf</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>off,on</DESCRIPTION>
                <ONEOF>off</ONEOF>
                <ONEOF>on</ONEOF>
                <DEFAULT>on</DEFAULT>
            </ARG>
            <TIP>Aggressively reduce size of the DWARF information</TIP>
            <HELP>Aggressively reduce the size of the DWARF information.  When this option used, the DWARF information is parsed and examined to look for and eliminate duplicate types, and builds a .debug_abbrev table for the whole program.</HELP>
        </OPTION>
        
        <OPTION tag='COPY_COMPRESSION'>
            <TYPE>simple</TYPE>
            <NAME>--copy_compression</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>compression_kind</DESCRIPTION>
                <DEFAULT>rle</DEFAULT>
            </ARG>
            <TIP>Compress ELF sections copied using copy tables</TIP>
            <HELP>Overlays can be managed by using linker generated copy tables. To save ROM space, the linker can compress the data copied by copy tables. The compressed data is decompressed during copy.</HELP>
        </OPTION>
        
        <OPTION tag='DEFINE'>
            <TYPE>simple</TYPE>
            <NAME>--define</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>name=value</DESCRIPTION>
            </ARG>
            <TIP>Pre-define preprocessor macro _name_ to _value_</TIP>
            <HELP>Pre-define preprocessor macro _name_ to _value_</HELP>
        </OPTION>
        
        <OPTION tag='DIAG_ERROR'>
            <TYPE>simple</TYPE>
            <NAME>--diag_error</NAME>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>id</DESCRIPTION>
            </ARG>
            <TIP>Treat diagnostic &lt;id&gt; as error</TIP>
            <HELP>Treat diagnostic &lt;id&gt; as error</HELP>
        </OPTION>
        
        <OPTION tag='DIAG_REMARK'>
            <TYPE>simple</TYPE>
            <NAME>--diag_remark</NAME>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>id</DESCRIPTION>
            </ARG>
            <TIP>Treat diagnostic &lt;id&gt; as remark</TIP>
            <HELP>Treat diagnostic &lt;id&gt; as remark</HELP>
        </OPTION>
        
        <OPTION tag='DIAG_SUPPRESS'>
            <TYPE>simple</TYPE>
            <NAME>--diag_suppress</NAME>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>id</DESCRIPTION>
            </ARG>
            <TIP>Suppress diagnostic &lt;id&gt;</TIP>
            <HELP>Suppress diagnostic &lt;id&gt;</HELP>
        </OPTION>
        
        <OPTION tag='DIAG_WARNING'>
            <TYPE>simple</TYPE>
            <NAME>--diag_warning</NAME>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>id</DESCRIPTION>
            </ARG>
            <TIP>Treat diagnostic &lt;id&gt; as warning</TIP>
            <HELP>Treat diagnostic &lt;id&gt; as warning</HELP>
        </OPTION>
        
        <OPTION tag='DISABLE_AUTO_RTS'>
            <TYPE>simple</TYPE>
            <NAME>--disable_auto_rts</NAME>
            <TIP>Disable automatic RTS selection</TIP>
            <HELP>Disable automatic RTS selection</HELP>
        </OPTION>
        
        <OPTION tag='DISABLE_CLINK'>
            <TYPE>simple</TYPE>
            <NAME>--disable_clink</NAME>
            <ALIAS>-j</ALIAS>
            <TIP>Disable conditional linking &amp; ignore .clink</TIP>
            <HELP>Disable conditional linking; ignore all .clink directives.</HELP>
        </OPTION>
        
        <OPTION tag='DISABLE_PP'>
            <TYPE>simple</TYPE>
            <NAME>--disable_pp</NAME>
            <TIP>Don&apos;t use C preprocessor for command files</TIP>
            <HELP>This disables preprocessing of linker command files.</HELP>
        </OPTION>
        
        <OPTION tag='DISPLAY_ERROR_NUMBER'>
            <TYPE>simple</TYPE>
            <NAME>--display_error_number</NAME>
            <TIP>Emit diagnostic identifier numbers</TIP>
            <HELP>Emit diagnostic identifier numbers</HELP>
        </OPTION>
        
        <OPTION tag='ENTRY_POINT'>
            <TYPE>simple</TYPE>
            <NAME>--entry_point</NAME>
            <ALIAS>-e</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>symbol</DESCRIPTION>
            </ARG>
            <TIP>Specify program entry point for the output module</TIP>
            <HELP>Specify program entry point for the output module</HELP>
        </OPTION>
        
        <OPTION tag='FILL_VALUE'>
            <TYPE>simple</TYPE>
            <NAME>--fill_value</NAME>
            <ALIAS>-f</ALIAS>
            <ARG>
                <TYPE>HEXNUMBER</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>value</DESCRIPTION>
            </ARG>
            <TIP>Default fill value for holes in output sections</TIP>
            <HELP>Set the default fill value for filling holes in output sections.</HELP>
        </OPTION>
        
        <OPTION tag='GENERATE_DEAD_FUNCS_LIST'>
            <TYPE>simple</TYPE>
            <NAME>--generate_dead_funcs_list</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>fname</DESCRIPTION>
            </ARG>
            <TIP>List removed dead functions into file</TIP>
            <HELP>Create a list, into the file &lt;fname&gt;, of the routines and sections that are dead (never referenced) and were removed by the linker.  The default &lt;fname&gt; is &apos;dead_funcs.txt&apos;.</HELP>
        </OPTION>
        
        <OPTION tag='GLOBALIZE'>
            <TYPE>simple</TYPE>
            <NAME>--globalize</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>pattern</DESCRIPTION>
            </ARG>
            <TIP>Do not localize symbols matching pattern</TIP>
            <HELP>The option &apos;--localize=l_pattern&apos; makes the symbols matching the l_pattern hidden. The &apos;--globalilze=g_pattern&apos; option excludes symbols matching g_pattern from symbol localization provided g_pattern is more restrictive than l_pattern. </HELP>
        </OPTION>
        
        <OPTION tag='HEAP_SIZE'>
            <TYPE>simple</TYPE>
            <NAME>--heap_size</NAME>
            <ALIAS>-heap</ALIAS>
            <ALIAS>--heap</ALIAS>
            <ARG>
                <TYPE>HEXNUMBER</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>size</DESCRIPTION>
            </ARG>
            <TIP>Heap size for C/C++ dynamic memory allocation</TIP>
            <HELP>Specify the maximum heap size for C/C++ dynamic memory allocation.</HELP>
        </OPTION>
        
        <OPTION tag='HIDE'>
            <TYPE>simple</TYPE>
            <NAME>--hide</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>pattern</DESCRIPTION>
            </ARG>
            <TIP>Hide symbols matching pattern</TIP>
            <HELP>Hide the symbols matching the pattern by changing the name to empty string</HELP>
        </OPTION>
        
        <OPTION tag='ISSUE_REMARKS'>
            <TYPE>simple</TYPE>
            <NAME>--issue_remarks</NAME>
            <TIP>Issue remarks</TIP>
            <HELP>Issue remarks</HELP>
        </OPTION>
        
        <OPTION tag='LIBRARY'>
            <TYPE>simple</TYPE>
            <NAME>--library</NAME>
            <PREFERREDALIAS>-l</PREFERREDALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>file</DESCRIPTION>
            </ARG>
            <TIP>Include library file or command file as input</TIP>
            <HELP>Include library file or command file as input</HELP>
        </OPTION>
        
        <OPTION tag='LINKER_HELP'>
            <TYPE>cmdline</TYPE>
            <NAME>--linker_help</NAME>
            <ALIAS>-help</ALIAS>
            <ALIAS>--help</ALIAS>
            <TIP>Display usage information</TIP>
            <HELP>Display usage information.  Followed by another option, will display detailed information on that option.</HELP>
        </OPTION>
        
        <OPTION tag='LOCALIZE'>
            <TYPE>simple</TYPE>
            <NAME>--localize</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>pattern</DESCRIPTION>
            </ARG>
            <TIP>Make the symbols matching pattern local</TIP>
            <HELP>Given a symbol name pattern, make all the symbols matching this pattern local</HELP>
        </OPTION>
        
        <OPTION tag='MAKE_GLOBAL'>
            <TYPE>simple</TYPE>
            <NAME>--make_global</NAME>
            <ALIAS>-g</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>symbol</DESCRIPTION>
            </ARG>
            <TIP>Don&apos;t make global symbol static if -h is specified</TIP>
            <HELP>Don&apos;t make global symbol static if -h is specified</HELP>
        </OPTION>
        
        <OPTION tag='MAKE_STATIC'>
            <TYPE>simple</TYPE>
            <NAME>--make_static</NAME>
            <ALIAS>-h</ALIAS>
            <TIP>Make all global symbols static</TIP>
            <HELP>Make all global symbols static</HELP>
        </OPTION>
        
        <OPTION tag='MAP_FILE'>
            <TYPE>simple</TYPE>
            <NAME>--map_file</NAME>
            <PREFERREDALIAS>-m</PREFERREDALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>file</DESCRIPTION>
            </ARG>
            <TIP>Input and output sections listed into &lt;file&gt;</TIP>
            <HELP>Produce a listing of all input and output sections into &lt;file&gt;.</HELP>
        </OPTION>
        
        <OPTION tag='MAPFILE_CONTENTS'>
            <TYPE>simple</TYPE>
            <NAME>--mapfile_contents</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>attribute</DESCRIPTION>
            </ARG>
            <TIP>Display attribute settings in map file</TIP>
            <HELP>Enable the display of &lt;attribute&gt; or disable with no&lt;attribute&gt; in the linker generated map file.  Multiple attributes can be specified by separating them with commas (e.g. --mapfile_contents=sections,nosymbols).  Type --mapfile_contents=help for a list of attributes.</HELP>
        </OPTION>
        
        <OPTION tag='MINIMIZE_TRAMPOLINES'>
            <TYPE>simple</TYPE>
            <NAME>--minimize_trampolines</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>off,postorder</DESCRIPTION>
                <ONEOF>off</ONEOF>
                <ONEOF>postorder</ONEOF>
                <DEFAULT>postorder</DEFAULT>
            </ARG>
            <TIP>Select trampoline minimization algortithm</TIP>
            <HELP>This option attempts to place sections so as to minimize the number of far call trampolines required, possibly at the expense of optimal memory packing. The argument selects a heuristic to use. The &apos;postorder&apos; heuristic attempts to place functions before their callers so that the PC-relative offset is known when the caller is placed.</HELP>
        </OPTION>
        
        <OPTION tag='NO_DEMANGLE'>
            <TYPE>simple</TYPE>
            <NAME>--no_demangle</NAME>
            <TIP>Don&apos;t demangle symbol names in diagnostics</TIP>
            <HELP>Don&apos;t demangle symbol names in diagnostics</HELP>
        </OPTION>
        
        <OPTION tag='NO_SYM_MERGE'>
            <TYPE>simple</TYPE>
            <NAME>--no_sym_merge</NAME>
            <ALIAS>-b</ALIAS>
            <TIP>No type merging in symbolic debugging information</TIP>
            <HELP>Disable type merging in symbolic debugging information.</HELP>
        </OPTION>
        
        <OPTION tag='NO_SYMTABLE'>
            <TYPE>simple</TYPE>
            <NAME>--no_symtable</NAME>
            <ALIAS>-s</ALIAS>
            <TIP>Strip symbol table and line number entries</TIP>
            <HELP>Strip symbol table and line number entries</HELP>
        </OPTION>
        
        <OPTION tag='NO_WARNINGS'>
            <TYPE>simple</TYPE>
            <NAME>--no_warnings</NAME>
            <TIP>Suppress warnings</TIP>
            <HELP>Suppress warnings</HELP>
        </OPTION>
        
        <OPTION tag='OUTPUT_FILE'>
            <TYPE>simple</TYPE>
            <NAME>--output_file</NAME>
            <PREFERREDALIAS>-o</PREFERREDALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>file</DESCRIPTION>
            </ARG>
            <TIP>Specify output file name</TIP>
            <HELP>Full filename of the output file.</HELP>
        </OPTION>
        
        <OPTION tag='PREFERRED_ORDER'>
            <TYPE>simple</TYPE>
            <NAME>--preferred_order</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>function</DESCRIPTION>
            </ARG>
            <TIP>Add &lt;function&gt; to preferred placement order list</TIP>
            <HELP>Insert a function into the preferred function order list for placement.  Functions that are close to each other in the preferred function order list will tend to be placed close together (increase program locality between them).  Static functions of the same name can be distinguished from each other by prefixing the function name with the path and file in which the function is defined followed by a &apos;:&apos; character to delimit the beginning of the function name.</HELP>
        </OPTION>
        
        <OPTION tag='PRIORITY'>
            <TYPE>simple</TYPE>
            <NAME>--priority</NAME>
            <ALIAS>-priority</ALIAS>
            <TIP>Search libraries in priority order</TIP>
            <HELP>Search libraries in priority order</HELP>
        </OPTION>
        
        <OPTION tag='RAM_MODEL'>
            <TYPE>simple</TYPE>
            <NAME>--ram_model</NAME>
            <ALIAS>-cr</ALIAS>
            <TIP>Link using RAM autoinitialization model</TIP>
            <HELP>Link using RAM autoinitialization model</HELP>
            <RESETS>ROM_MODEL</RESETS>
        </OPTION>
        
        <OPTION tag='RELOCATABLE'>
            <TYPE>simple</TYPE>
            <NAME>--relocatable</NAME>
            <ALIAS>-r</ALIAS>
            <TIP>Produce a relocatable output module</TIP>
            <HELP>Produce a relocatable output module</HELP>
        </OPTION>
        
        <OPTION tag='REREAD_LIBS'>
            <TYPE>simple</TYPE>
            <NAME>--reread_libs</NAME>
            <ALIAS>-x</ALIAS>
            <TIP>Reread libraries; resolve backward references</TIP>
            <HELP>Reread libraries; resolve backward references</HELP>
        </OPTION>
        
        <OPTION tag='RETAIN'>
            <TYPE>simple</TYPE>
            <NAME>--retain</NAME>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>sym_or_scn_spec</DESCRIPTION>
            </ARG>
            <TIP>Specify symbols/sections to be retained by linker</TIP>
            <HELP>When --unused_section_elimination is enabled, the ELF linker does not include a section in the final link if it is not needed in the executable to resolve references. This option can be used to tell the linker to retain a list of sections that would otherwise be not retained. This option accepts the wild cards &apos;*&apos; and &apos;?&apos; and when wild cards are used, the argument should be in quotes. The following option parameters are accepted:

--retain=symbol_spec retains sections that define symbol matching the argument. For ex, --retain=&apos;init*&apos; retains sections that define symbols that start with &apos;init&apos;. User may not specify --retain=&apos;*&apos;.

--retain=file_spec(scn_spec [,scn_spec ...]) retains sections matching scn_spec(s) from files matching file_spec. For ex, the argument &apos;*(.initvec)&apos; causes the linker to retain .initvec sections from all input files.

NOTE: User can specify --retain=&apos;*(*)&apos; to retain all the sections from all the input object files. Note that this does not prevent sections from library members from being optimized out. If you want to totally disable unused section elimination, please use --unused_section_elimination=off.

--retain=ar_spec&lt;mem_spec, [mem_spec ...]&gt;(scn_spec, [scn_spec ...]) retains sections matching scn_spec(s) from members matching mem_spec(s) from archive files matching ar_spec. For ex, rts32eabi.lib&lt;printf.obj&gt;(.text) causes the linker to retain .text section from printf.obj in rts32eabi.lib. If the library is specified with -l option (-lrts32eabi.lib) the library search path is used to search the library. User may not specify &apos;*&lt;*&gt;(*)&apos;. </HELP>
        </OPTION>
        
        <OPTION tag='ROM_MODEL'>
            <TYPE>simple</TYPE>
            <NAME>--rom_model</NAME>
            <ALIAS>-c</ALIAS>
            <TIP>Link using ROM autoinitialization model</TIP>
            <HELP>Link using ROM autoinitialization model</HELP>
            <RESETS>RAM_MODEL</RESETS>
        </OPTION>
        
        <OPTION tag='RUN_ABS'>
            <TYPE>cmdline</TYPE>
            <NAME>--run_abs</NAME>
            <ALIAS>-abs</ALIAS>
            <TIP>Produce absolute listing file</TIP>
            <HELP>Produce absolute listing file</HELP>
        </OPTION>
        
        <OPTION tag='SCAN_LIBRARIES'>
            <TYPE>simple</TYPE>
            <NAME>--scan_libraries</NAME>
            <ALIAS>-scanlibs</ALIAS>
            <TIP>Scan libraries for duplicate symbol definitions</TIP>
            <HELP>Check whether symbol definitions that are pulled into the link are duplicated in any of the libraries included in the build.  This information is typically ignored as the linker will pull in the first definition it encounters.</HELP>
        </OPTION>
        
        <OPTION tag='SEARCH_PATH'>
            <TYPE>simple</TYPE>
            <NAME>--search_path</NAME>
            <PREFERREDALIAS>-i</PREFERREDALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>dir</DESCRIPTION>
            </ARG>
            <TIP>Add &lt;dir&gt; to library search path</TIP>
            <HELP>Alter the library-search algorithm to look in dir before looking in the default location.  This option must appear before the -l option.</HELP>
        </OPTION>
        
        <OPTION tag='SET_ERROR_LIMIT'>
            <TYPE>simple</TYPE>
            <NAME>--set_error_limit</NAME>
            <ARG>
                <TYPE>NUMBER</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>count</DESCRIPTION>
            </ARG>
            <TIP>Set error limit to &lt;count&gt;</TIP>
            <HELP>Set error limit to &lt;count&gt;</HELP>
        </OPTION>
        
        <OPTION tag='STACK_SIZE'>
            <TYPE>simple</TYPE>
            <NAME>--stack_size</NAME>
            <ALIAS>-stack</ALIAS>
            <ALIAS>--stack</ALIAS>
            <ARG>
                <TYPE>HEXNUMBER</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>size</DESCRIPTION>
            </ARG>
            <TIP>Set C system stack size</TIP>
            <HELP>Set C system stack size</HELP>
        </OPTION>
        
        <OPTION tag='STRICT_COMPATIBILITY'>
            <TYPE>simple</TYPE>
            <NAME>--strict_compatibility</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>off,on</DESCRIPTION>
                <ONEOF>off</ONEOF>
                <ONEOF>on</ONEOF>
                <DEFAULT>on</DEFAULT>
            </ARG>
            <TIP>Strict compatibility checking</TIP>
            <HELP>Strict compatibility checking</HELP>
        </OPTION>
        
        <OPTION tag='TRAMPOLINE_MIN_SPACING'>
            <TYPE>simple</TYPE>
            <NAME>--trampoline_min_spacing</NAME>
            <ARG>
                <TYPE>HEXNUMBER</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>size</DESCRIPTION>
            </ARG>
            <TIP>Minimum space between non-adjacent trampolines</TIP>
            <HELP>When tramploline reservations are spaced more closely than this limit, try to make them adjacent.  A higher value minimizes fragmentation, but may result in more trampolines. A lower value may reduce trampolines, at the expense of fragmentation and linker running time.  Specifying 0 for this option disables coalescing.  The default is 16K.</HELP>
        </OPTION>
        
        <OPTION tag='TRAMPOLINES'>
            <TYPE>simple</TYPE>
            <NAME>--trampolines</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>off,on</DESCRIPTION>
                <ONEOF>off</ONEOF>
                <ONEOF>on</ONEOF>
                <DEFAULT>on</DEFAULT>
            </ARG>
            <TIP>Generate far call trampolines</TIP>
            <HELP>Generate far call trampolines</HELP>
        </OPTION>
        
        <OPTION tag='UNDEF_SYM'>
            <TYPE>simple</TYPE>
            <NAME>--undef_sym</NAME>
            <ALIAS>-u</ALIAS>
            <ARG>
                <TYPE>STRINGLIST</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>sym</DESCRIPTION>
            </ARG>
            <TIP>Add &lt;sym&gt; to symbol table as an unresolved symbol</TIP>
            <HELP>Add &lt;sym&gt; to symbol table as an unresolved symbol</HELP>
        </OPTION>
        
        <OPTION tag='UNDEFINE'>
            <TYPE>simple</TYPE>
            <NAME>--undefine</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>name</DESCRIPTION>
            </ARG>
            <TIP>Undefine preprocessor macro _name_</TIP>
            <HELP>Undefine preprocessor macro _name_</HELP>
        </OPTION>
        
        <OPTION tag='UNHIDE'>
            <TYPE>simple</TYPE>
            <NAME>--unhide</NAME>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>pattern</DESCRIPTION>
            </ARG>
            <TIP>Exclude symbols matching pattern from hinding</TIP>
            <HELP>The option --hide=hide_pattern makes the symbols matching the hide_pattern hidden. The --unhide=unhide_pattern option excludes symbols matching unhide_pattern from symbol hiding provided unhide_pattern is more restrictive than hide_pattern. </HELP>
        </OPTION>
        
        <OPTION tag='UNUSED_SECTION_ELIMINATION'>
            <TYPE>simple</TYPE>
            <NAME>--unused_section_elimination</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>off,on</DESCRIPTION>
                <ONEOF>off</ONEOF>
                <ONEOF>on</ONEOF>
                <DEFAULT>on</DEFAULT>
            </ARG>
            <TIP>Eliminate sections not needed in the executable</TIP>
            <HELP>In order to minimize memory use, the linker does not include a section that is not needed to resolve any references in the final executable. --unused_section_elimination=off can be used to disable this optimization.</HELP>
        </OPTION>
        
        <OPTION tag='VERBOSE_DIAGNOSTICS'>
            <TYPE>simple</TYPE>
            <NAME>--verbose_diagnostics</NAME>
            <TIP>Verbose diagnostics</TIP>
            <HELP>Verbose diagnostics</HELP>
        </OPTION>
        
        <OPTION tag='WARN_SECTIONS'>
            <TYPE>simple</TYPE>
            <NAME>--warn_sections</NAME>
            <ALIAS>-w</ALIAS>
            <TIP>Warn if an unspecified output section is created</TIP>
            <HELP>Warn if an unspecified output section is created</HELP>
        </OPTION>
        
        <OPTION tag='XML_LINK_INFO'>
            <TYPE>simple</TYPE>
            <NAME>--xml_link_info</NAME>
            <ALIAS>-xml_link_info</ALIAS>
            <ARG>
                <TYPE>STRING</TYPE>
                <STATUS>required</STATUS>
                <DESCRIPTION>file</DESCRIPTION>
            </ARG>
            <TIP>Detailed link information data-base into &lt;file&gt;</TIP>
            <HELP>Produce a detailed link information data-base into the file named &lt;file&gt;.</HELP>
        </OPTION>
        
        <OPTION tag='ZERO_INIT'>
            <TYPE>simple</TYPE>
            <NAME>--zero_init</NAME>
            <ARG>
                <TYPE>ONEOF</TYPE>
                <STATUS>optional</STATUS>
                <DESCRIPTION>off,on</DESCRIPTION>
                <ONEOF>off</ONEOF>
                <ONEOF>on</ONEOF>
                <DEFAULT>on</DEFAULT>
            </ARG>
            <TIP>Zero initialize ELF uninitialized sections</TIP>
            <HELP>This option indicates that the linker should generate compressed cinit table records that zero initializes ELF uninitialized sections during boot. This option is ignored if --rom_model option is not specified.</HELP>
        </OPTION>
        
        <MUTEX tag='MUTEX_INITIALIZATION_MODEL'>
            <NAME>Initialization model</NAME>
            
            <SEVERITY>RESET</SEVERITY>
            <STATUS>optional</STATUS>
            <MEMBER>ROM_MODEL</MEMBER>
            <MEMBER>RAM_MODEL</MEMBER>
        </MUTEX>
        <MUTEX tag='MUTEX_ARM_BIG_ENDIAN_MODES'>
            <NAME>ARM big endian modes</NAME>
            
            <SEVERITY>CONFLICT</SEVERITY>
            <STATUS>optional</STATUS>
            <MEMBER>BE32</MEMBER>
            <MEMBER>BE8</MEMBER>
        </MUTEX>
    </DEFINITIONS>
    <BASIC>
        <MEMBER>OUTPUT_FILE</MEMBER>
        <MEMBER>MAP_FILE</MEMBER>
        <MEMBER>STACK_SIZE</MEMBER>
        <MEMBER>HEAP_SIZE</MEMBER>
    </BASIC>
    <CATEGORY tag='LNKCPP'>
        <NAME>Command File Preprocessing:</NAME>
        
        <MEMBER>DEFINE</MEMBER>
        <MEMBER>UNDEFINE</MEMBER>
        <MEMBER>DISABLE_PP</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='LNKDIAG'>
        <NAME>Diagnostics:</NAME>
        
        <MEMBER>VERBOSE_DIAGNOSTICS</MEMBER>
        <MEMBER>DIAG_WARNING</MEMBER>
        <MEMBER>DISPLAY_ERROR_NUMBER</MEMBER>
        <MEMBER>NO_WARNINGS</MEMBER>
        <MEMBER>SET_ERROR_LIMIT</MEMBER>
        <MEMBER>DIAG_SUPPRESS</MEMBER>
        <MEMBER>ISSUE_REMARKS</MEMBER>
        <MEMBER>NO_DEMANGLE</MEMBER>
        <MEMBER>DIAG_REMARK</MEMBER>
        <MEMBER>DIAG_ERROR</MEMBER>
        <MEMBER>WARN_SECTIONS</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='LNKDIR'>
        <NAME>File Search Path:</NAME>
        
        <MEMBER>LIBRARY</MEMBER>
        <MEMBER>SEARCH_PATH</MEMBER>
        <MEMBER>PRIORITY</MEMBER>
        <MEMBER>DISABLE_AUTO_RTS</MEMBER>
        <MEMBER>REREAD_LIBS</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='LNKOUTF'>
        <NAME>Linker Output:</NAME>
        
        <MEMBER>OUTPUT_FILE</MEMBER>
        <MEMBER>MAP_FILE</MEMBER>
        <MEMBER>XML_LINK_INFO</MEMBER>
        <MEMBER>GENERATE_DEAD_FUNCS_LIST</MEMBER>
        <MEMBER>RUN_ABS</MEMBER>
        <MEMBER>RELOCATABLE</MEMBER>
        <MEMBER>ABSOLUTE_EXE</MEMBER>
        <MEMBER>MAPFILE_CONTENTS</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='LNKSYM'>
        <NAME>Symbol Management:</NAME>
        
        <MEMBER>MAKE_STATIC</MEMBER>
        <MEMBER>ENTRY_POINT</MEMBER>
        <MEMBER>NO_SYMTABLE</MEMBER>
        <MEMBER>GLOBALIZE</MEMBER>
        <MEMBER>SCAN_LIBRARIES</MEMBER>
        <MEMBER>UNDEF_SYM</MEMBER>
        <MEMBER>UNHIDE</MEMBER>
        <MEMBER>RETAIN</MEMBER>
        <MEMBER>MAKE_GLOBAL</MEMBER>
        <MEMBER>HIDE</MEMBER>
        <MEMBER>NO_SYM_MERGE</MEMBER>
        <MEMBER>LOCALIZE</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='LNKRTENV'>
        <NAME>Runtime Environment:</NAME>
        
        <MEMBER>HEAP_SIZE</MEMBER>
        <MEMBER>STACK_SIZE</MEMBER>
        <MEMBER>MUTEX_INITIALIZATION_MODEL</MEMBER>
        <MEMBER>MUTEX_ARM_BIG_ENDIAN_MODES</MEMBER>
        <MEMBER>ARG_SIZE</MEMBER>
        <MEMBER>FILL_VALUE</MEMBER>
        <MEMBER>TRAMPOLINES</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='LNKOPT'>
        <NAME>Linktime Optimization:</NAME>
        
        <MEMBER>COMPRESS_DWARF</MEMBER>
        <MEMBER>COPY_COMPRESSION</MEMBER>
        <MEMBER>CINIT_COMPRESSION</MEMBER>
        <MEMBER>UNUSED_SECTION_ELIMINATION</MEMBER>
    </CATEGORY>
    
    <CATEGORY tag='LNKMISC'>
        <NAME>Miscellaneous:</NAME>
        
        <MEMBER>PREFERRED_ORDER</MEMBER>
        <MEMBER>DISABLE_CLINK</MEMBER>
        <MEMBER>LINKER_HELP</MEMBER>
        <MEMBER>ZERO_INIT</MEMBER>
        <MEMBER>MINIMIZE_TRAMPOLINES</MEMBER>
        <MEMBER>STRICT_COMPATIBILITY</MEMBER>
        <MEMBER>TRAMPOLINE_MIN_SPACING</MEMBER>
    </CATEGORY>
    
</TOOL>
</TOOLSET>
