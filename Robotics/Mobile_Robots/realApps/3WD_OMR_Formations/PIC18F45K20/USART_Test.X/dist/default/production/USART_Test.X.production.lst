

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Sep 03 17:04:41 2024

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 1.44
    15                           ; Generated 14/09/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F45K20 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _TXREG	set	4013
    49  0000                     _RCREG	set	4014
    50  0000                     _PIR1bits	set	3998
    51  0000                     _PIE1bits	set	3997
    52  0000                     _INTCONbits	set	4082
    53  0000                     _RCONbits	set	4048
    54  0000                     _SPBRG	set	4015
    55  0000                     _BAUDCONbits	set	4024
    56  0000                     _BAUDCON	set	4024
    57  0000                     _RCSTAbits	set	4011
    58  0000                     _TXSTAbits	set	4012
    59  0000                     _TRISCbits	set	3988
    60                           
    61                           ; #config settings
    62  0000                     
    63                           	psect	cinit
    64  000104                     __pcinit:
    65                           	opt stack 0
    66  000104                     start_initialization:
    67                           	opt stack 0
    68  000104                     __initialization:
    69                           	opt stack 0
    70  000104                     end_of_initialization:
    71                           	opt stack 0
    72  000104                     __end_of__initialization:
    73                           	opt stack 0
    74  000104  9018               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    75  000106  9218               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    76  000108  0100               	movlb	0
    77  00010A  EF72  F000         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMRAM
    80  000001                     __pcstackCOMRAM:
    81                           	opt stack 0
    82  000001                     ??_ISR:
    83                           
    84                           ; 1 bytes @ 0x0
    85  000001                     	ds	18
    86  000013                     ISR@character:
    87                           	opt stack 0
    88                           
    89                           ; 1 bytes @ 0x12
    90  000013                     	ds	1
    91  000014                     initialize_USART@baudrate_reg:
    92                           	opt stack 0
    93                           
    94                           ; 2 bytes @ 0x13
    95  000014                     	ds	2
    96  000016                     ??_main:
    97                           
    98                           ; 1 bytes @ 0x15
    99  000016                     	ds	2
   100                           
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 49 in file "main.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;		None
   111 ;; Return value:  Size  Location     Type
   112 ;;                  1    wreg      void 
   113 ;; Registers used:
   114 ;;		wreg, status,2, cstack
   115 ;; Tracked objects:
   116 ;;		On entry : 0/0
   117 ;;		On exit  : 0/0
   118 ;;		Unchanged: 0/0
   119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   120 ;;      Params:         0       0       0       0       0       0       0
   121 ;;      Locals:         0       0       0       0       0       0       0
   122 ;;      Temps:          2       0       0       0       0       0       0
   123 ;;      Totals:         2       0       0       0       0       0       0
   124 ;;Total ram usage:        2 bytes
   125 ;; Hardware stack levels required when called:    2
   126 ;; This function calls:
   127 ;;		_initialize_USART
   128 ;; This function is called by:
   129 ;;		Startup code after reset
   130 ;; This function uses a non-reentrant model
   131 ;;
   132                           
   133                           	psect	text0
   134  0000E4                     __ptext0:
   135                           	opt stack 0
   136  0000E4                     _main:
   137                           	opt stack 29
   138                           
   139                           ;main.c: 50: initialize_USART();
   140                           
   141                           ;incstack = 0
   142  0000E4  EC59  F000         	call	_initialize_USART	;wreg free
   143  0000E8                     
   144                           ;main.c: 53: _delay((unsigned long)((100)*(64000000/4000.0)));
   145  0000E8  0E09               	movlw	9
   146  0000EA  6E17               	movwf	(??_main+1)& (0+255),c
   147  0000EC  0E1E               	movlw	30
   148  0000EE  6E16               	movwf	??_main& (0+255),c
   149  0000F0  0EE4               	movlw	228
   150  0000F2                     u27:
   151  0000F2  2EE8               	decfsz	wreg,f,c
   152  0000F4  D7FE               	bra	u27
   153  0000F6  2E16               	decfsz	??_main& (0+255),f,c
   154  0000F8  D7FC               	bra	u27
   155  0000FA  2E17               	decfsz	(??_main+1)& (0+255),f,c
   156  0000FC  D7FA               	bra	u27
   157  0000FE  F000 F000          	nop2	
   158  000102  D7F2               	goto	l33
   159  000104                     __end_of_main:
   160                           	opt stack 0
   161                           wreg	equ	0xFE8
   162                           
   163 ;; *************** function _initialize_USART *****************
   164 ;; Defined at:
   165 ;;		line 61 in file "main.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;  baudrate_reg    2   19[COMRAM] int 
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   179 ;;      Params:         0       0       0       0       0       0       0
   180 ;;      Locals:         2       0       0       0       0       0       0
   181 ;;      Temps:          0       0       0       0       0       0       0
   182 ;;      Totals:         2       0       0       0       0       0       0
   183 ;;Total ram usage:        2 bytes
   184 ;; Hardware stack levels used:    1
   185 ;; Hardware stack levels required when called:    1
   186 ;; This function calls:
   187 ;;		Nothing
   188 ;; This function is called by:
   189 ;;		_main
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           	psect	text1
   194  0000B2                     __ptext1:
   195                           	opt stack 0
   196  0000B2                     _initialize_USART:
   197                           	opt stack 29
   198                           
   199                           ;main.c: 63: TRISCbits.RC6 = 0;
   200                           
   201                           ;incstack = 0
   202  0000B2  9C94               	bcf	3988,6,c	;volatile
   203                           
   204                           ;main.c: 64: TRISCbits.RC7 = 1;
   205  0000B4  8E94               	bsf	3988,7,c	;volatile
   206                           
   207                           ;main.c: 66: TXSTAbits.SYNC = 0;
   208  0000B6  98AC               	bcf	4012,4,c	;volatile
   209                           
   210                           ;main.c: 67: TXSTAbits.TX9 = 0;
   211  0000B8  9CAC               	bcf	4012,6,c	;volatile
   212                           
   213                           ;main.c: 68: TXSTAbits.BRGH = 1;
   214  0000BA  84AC               	bsf	4012,2,c	;volatile
   215                           
   216                           ;main.c: 69: TXSTAbits.TXEN = 1;
   217  0000BC  8AAC               	bsf	4012,5,c	;volatile
   218                           
   219                           ;main.c: 70: TXSTAbits.SENDB = 0;
   220  0000BE  96AC               	bcf	4012,3,c	;volatile
   221                           
   222                           ;main.c: 72: RCSTAbits.SPEN = 1;
   223  0000C0  8EAB               	bsf	4011,7,c	;volatile
   224                           
   225                           ;main.c: 73: RCSTAbits.RX9 = 0;
   226  0000C2  9CAB               	bcf	4011,6,c	;volatile
   227                           
   228                           ;main.c: 74: RCSTAbits.CREN = 1;
   229  0000C4  88AB               	bsf	4011,4,c	;volatile
   230                           
   231                           ;main.c: 76: BAUDCON = 0x0;
   232  0000C6  0E00               	movlw	0
   233  0000C8  6EB8               	movwf	4024,c	;volatile
   234                           
   235                           ;main.c: 77: BAUDCONbits.BRG16 = 1;
   236  0000CA  86B8               	bsf	4024,3,c	;volatile
   237                           
   238                           ;main.c: 79: int baudrate_reg = 64000000/115200/4 - 1;
   239  0000CC  0E00               	movlw	0
   240  0000CE  6E15               	movwf	initialize_USART@baudrate_reg+1,c
   241  0000D0  0E89               	movlw	137
   242  0000D2  6E14               	movwf	initialize_USART@baudrate_reg,c
   243                           
   244                           ;main.c: 80: SPBRG = 0x8A;
   245  0000D4  0E8A               	movlw	138
   246  0000D6  6EAF               	movwf	4015,c	;volatile
   247                           
   248                           ;main.c: 82: RCONbits.IPEN = 1;
   249  0000D8  8ED0               	bsf	4048,7,c	;volatile
   250                           
   251                           ;main.c: 83: INTCONbits.GIE = 1;
   252  0000DA  8EF2               	bsf	intcon,7,c	;volatile
   253                           
   254                           ;main.c: 84: INTCONbits.PEIE = 1;
   255  0000DC  8CF2               	bsf	intcon,6,c	;volatile
   256                           
   257                           ;main.c: 85: PIE1bits.RCIE = 1;
   258  0000DE  8A9D               	bsf	3997,5,c	;volatile
   259                           
   260                           ;main.c: 86: PIE1bits.TXIE = 0;
   261  0000E0  989D               	bcf	3997,4,c	;volatile
   262  0000E2  0012               	return		;funcret
   263  0000E4                     __end_of_initialize_USART:
   264                           	opt stack 0
   265                           intcon	equ	0xFF2
   266                           wreg	equ	0xFE8
   267                           
   268 ;; *************** function _ISR *****************
   269 ;; Defined at:
   270 ;;		line 90 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;  character       1   18[COMRAM] unsigned char 
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		None
   279 ;; Tracked objects:
   280 ;;		On entry : 0/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   284 ;;      Params:         0       0       0       0       0       0       0
   285 ;;      Locals:         1       0       0       0       0       0       0
   286 ;;      Temps:         18       0       0       0       0       0       0
   287 ;;      Totals:        19       0       0       0       0       0       0
   288 ;;Total ram usage:       19 bytes
   289 ;; Hardware stack levels used:    1
   290 ;; This function calls:
   291 ;;		Nothing
   292 ;; This function is called by:
   293 ;;		Interrupt level 2
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	intcode
   298  000008                     __pintcode:
   299                           	opt stack 0
   300  000008                     _ISR:
   301                           	opt stack 29
   302                           
   303                           ;incstack = 0
   304  000008  8218               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   305  00000A  CFFA F001          	movff	pclath,??_ISR
   306  00000E  CFFB F002          	movff	pclatu,??_ISR+1
   307  000012  CFE9 F003          	movff	fsr0l,??_ISR+2
   308  000016  CFEA F004          	movff	fsr0h,??_ISR+3
   309  00001A  CFE1 F005          	movff	fsr1l,??_ISR+4
   310  00001E  CFE2 F006          	movff	fsr1h,??_ISR+5
   311  000022  CFD9 F007          	movff	fsr2l,??_ISR+6
   312  000026  CFDA F008          	movff	fsr2h,??_ISR+7
   313  00002A  CFF3 F009          	movff	prodl,??_ISR+8
   314  00002E  CFF4 F00A          	movff	prodh,??_ISR+9
   315  000032  CFF6 F00B          	movff	tblptrl,??_ISR+10
   316  000036  CFF7 F00C          	movff	tblptrh,??_ISR+11
   317  00003A  CFF8 F00D          	movff	tblptru,??_ISR+12
   318  00003E  CFF5 F00E          	movff	tablat,??_ISR+13
   319  000042  C018  F00F         	movff	btemp,??_ISR+14
   320  000046  C019  F010         	movff	btemp+1,??_ISR+15
   321  00004A  C01A  F011         	movff	btemp+2,??_ISR+16
   322  00004E  C01B  F012         	movff	btemp+3,??_ISR+17
   323                           
   324                           ;main.c: 91: if (PIR1bits.RCIF){
   325  000052  AA9E               	btfss	3998,5,c	;volatile
   326  000054  D006               	goto	i2l44
   327                           
   328                           ;main.c: 92: PIE1bits.RCIE = 0;
   329  000056  9A9D               	bcf	3997,5,c	;volatile
   330                           
   331                           ;main.c: 93: char character = RCREG;
   332  000058  CFAE F013          	movff	4014,ISR@character	;volatile
   333                           
   334                           ;main.c: 94: TXREG = character;
   335  00005C  C013  FFAD         	movff	ISR@character,4013	;volatile
   336                           
   337                           ;main.c: 95: PIE1bits.RCIE = 1;
   338  000060  8A9D               	bsf	3997,5,c	;volatile
   339  000062                     i2l44:
   340  000062  C012  F01B         	movff	??_ISR+17,btemp+3
   341  000066  C011  F01A         	movff	??_ISR+16,btemp+2
   342  00006A  C010  F019         	movff	??_ISR+15,btemp+1
   343  00006E  C00F  F018         	movff	??_ISR+14,btemp
   344  000072  C00E  FFF5         	movff	??_ISR+13,tablat
   345  000076  C00D  FFF8         	movff	??_ISR+12,tblptru
   346  00007A  C00C  FFF7         	movff	??_ISR+11,tblptrh
   347  00007E  C00B  FFF6         	movff	??_ISR+10,tblptrl
   348  000082  C00A  FFF4         	movff	??_ISR+9,prodh
   349  000086  C009  FFF3         	movff	??_ISR+8,prodl
   350  00008A  C008  FFDA         	movff	??_ISR+7,fsr2h
   351  00008E  C007  FFD9         	movff	??_ISR+6,fsr2l
   352  000092  C006  FFE2         	movff	??_ISR+5,fsr1h
   353  000096  C005  FFE1         	movff	??_ISR+4,fsr1l
   354  00009A  C004  FFEA         	movff	??_ISR+3,fsr0h
   355  00009E  C003  FFE9         	movff	??_ISR+2,fsr0l
   356  0000A2  C002  FFFB         	movff	??_ISR+1,pclatu
   357  0000A6  C001  FFFA         	movff	??_ISR,pclath
   358  0000AA  9218               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   359  0000AC  0011               	retfie		f
   360  0000AE                     __end_of_ISR:
   361                           	opt stack 0
   362  0000                     pclatu	equ	0xFFB
   363                           pclath	equ	0xFFA
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           prodh	equ	0xFF4
   369                           prodl	equ	0xFF3
   370                           intcon	equ	0xFF2
   371                           fsr0h	equ	0xFEA
   372                           fsr0l	equ	0xFE9
   373                           wreg	equ	0xFE8
   374                           fsr1h	equ	0xFE2
   375                           fsr1l	equ	0xFE1
   376                           fsr2h	equ	0xFDA
   377                           fsr2l	equ	0xFD9
   378                           pclatu	equ	0xFFB
   379                           pclath	equ	0xFFA
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           prodh	equ	0xFF4
   385                           prodl	equ	0xFF3
   386                           intcon	equ	0xFF2
   387                           fsr0h	equ	0xFEA
   388                           fsr0l	equ	0xFE9
   389                           wreg	equ	0xFE8
   390                           fsr1h	equ	0xFE2
   391                           fsr1l	equ	0xFE1
   392                           fsr2h	equ	0xFDA
   393                           fsr2l	equ	0xFD9
   394                           
   395                           	psect	rparam
   396  0000                     pclatu	equ	0xFFB
   397                           pclath	equ	0xFFA
   398                           tblptru	equ	0xFF8
   399                           tblptrh	equ	0xFF7
   400                           tblptrl	equ	0xFF6
   401                           tablat	equ	0xFF5
   402                           prodh	equ	0xFF4
   403                           prodl	equ	0xFF3
   404                           intcon	equ	0xFF2
   405                           fsr0h	equ	0xFEA
   406                           fsr0l	equ	0xFE9
   407                           wreg	equ	0xFE8
   408                           fsr1h	equ	0xFE2
   409                           fsr1l	equ	0xFE1
   410                           fsr2h	equ	0xFDA
   411                           fsr2l	equ	0xFD9
   412                           
   413                           	psect	temp
   414  000018                     btemp:
   415                           	opt stack 0
   416  000018                     	ds	1
   417  0000                     int$flags	set	btemp
   418  0000                     wtemp6	set	btemp+1
   419                           pclatu	equ	0xFFB
   420                           pclath	equ	0xFFA
   421                           tblptru	equ	0xFF8
   422                           tblptrh	equ	0xFF7
   423                           tblptrl	equ	0xFF6
   424                           tablat	equ	0xFF5
   425                           prodh	equ	0xFF4
   426                           prodl	equ	0xFF3
   427                           intcon	equ	0xFF2
   428                           fsr0h	equ	0xFEA
   429                           fsr0l	equ	0xFE9
   430                           wreg	equ	0xFE8
   431                           fsr1h	equ	0xFE2
   432                           fsr1l	equ	0xFE1
   433                           fsr2h	equ	0xFDA
   434                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_initialize_USART

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                             21 COMRAM     2     2      0
                   _initialize_USART
 ---------------------------------------------------------------------------------
 (1) _initialize_USART                                     2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                 19    19      0      15
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize_USART

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     17      17       1       24.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Sep 03 17:04:41 2024

                          l33 00E8                            u27 00F2                           _ISR 0008  
                __CFG_BORV$18 000000                           wreg 000FE8                  __CFG_LVP$OFF 000000  
                        ?_ISR 0001                          i2l44 0062                          _main 00E4  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr2h 000FDA  
                        fsr0l 000FE9                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0018                          prodh 000FF4                          prodl 000FF3  
                        start 00AE                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000                         ??_ISR 0001                         ?_main 0001  
                       _RCREG 000FAE                         _SPBRG 000FAF                         _TXREG 000FAD  
               __CFG_PWRT$OFF 000000                __CFG_FCMEN$OFF 000000                         pclath 000FFA  
                       tablat 000FF5                         wtemp6 0019                __CFG_HFOFST$ON 000000  
             __initialization 0104                  __end_of_main 0104                        ??_main 0016  
               __activetblptr 000000             ?_initialize_USART 0001                __CFG_WDTEN$OFF 000000  
          ??_initialize_USART 0014                __CFG_XINST$OFF 000000                __CFG_STVREN$ON 000000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 0104               __CFG_PBADEN$OFF 000000  
               ___rparam_used 000001                __pcstackCOMRAM 0001                       _BAUDCON 000FB8  
                     __Hparam 0000                       __Lparam 0000                       __pcinit 0104  
                     __ramtop 0600                       __ptext0 00E4                       __ptext1 00B2  
                __size_of_ISR 00A6          end_of_initialization 0104  initialize_USART@baudrate_reg 0014  
                   _RCSTAbits 000FAB     __size_of_initialize_USART 0032                     _TRISCbits 000F94  
                   _TXSTAbits 000FAC                  ISR@character 0013                   _BAUDCONbits 000FB8  
         start_initialization 0104                   __end_of_ISR 00AE              __CFG_LPT1OSC$OFF 000000  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008              _initialize_USART 00B2  
                    _PIE1bits 000F9D                      _PIR1bits 000F9E                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      __Hrparam 0000                      __Lrparam 0000  
          __CFG_BOREN$SBORDIS 000000                 __size_of_main 0020                      int$flags 0018  
                  _INTCONbits 000FF2      __end_of_initialize_USART 00E4                      intlevel2 0000  
           __CFG_FOSC$INTIO67 000000  
